# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cloud/planton/apis/integration/kubernetes/cost/api.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'cloud/planton/apis/integration/kubernetes/cost/api.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from cloud.planton.apis.commons.apiresource import status_pb2 as cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_status__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n8cloud/planton/apis/integration/kubernetes/cost/api.proto\x12.cloud.planton.apis.integration.kubernetes.cost\x1a\x33\x63loud/planton/apis/commons/apiresource/status.proto\"\x93\x0e\n\x0e\x43ostAllocation\x12R\n\x05\x61udit\x18\x63 \x01(\x0b\x32<.cloud.planton.apis.commons.apiresource.ApiResourceAuditInfoR\x05\x61udit\x12\x10\n\x03org\x18\x01 \x01(\tR\x03org\x12&\n\x0fkube_cluster_id\x18\x03 \x01(\tR\rkubeClusterId\x12\x10\n\x03\x65nv\x18\x04 \x01(\tR\x03\x65nv\x12#\n\rresource_kind\x18\x05 \x01(\tR\x0cresourceKind\x12\x1f\n\x0bresource_id\x18\x06 \x01(\tR\nresourceId\x12\x12\n\x04name\x18\x07 \x01(\tR\x04name\x12\x19\n\x08start_ts\x18\x08 \x01(\tR\x07startTs\x12\x15\n\x06\x65nd_ts\x18\t \x01(\tR\x05\x65ndTs\x12\x18\n\x07minutes\x18\n \x01(\x01R\x07minutes\x12\x1b\n\tcpu_cores\x18\x0b \x01(\x01R\x08\x63puCores\x12\x37\n\x18\x63pu_core_request_average\x18\x0c \x01(\x01R\x15\x63puCoreRequestAverage\x12\x33\n\x16\x63pu_core_usage_average\x18\r \x01(\x01R\x13\x63puCoreUsageAverage\x12$\n\x0e\x63pu_core_hours\x18\x0e \x01(\x01R\x0c\x63puCoreHours\x12\x19\n\x08\x63pu_cost\x18\x0f \x01(\x01R\x07\x63puCost\x12.\n\x13\x63pu_cost_adjustment\x18\x10 \x01(\x01R\x11\x63puCostAdjustment\x12%\n\x0e\x63pu_efficiency\x18\x11 \x01(\x01R\rcpuEfficiency\x12\x1b\n\tgpu_count\x18\x12 \x01(\x01R\x08gpuCount\x12\x1b\n\tgpu_hours\x18\x13 \x01(\x01R\x08gpuHours\x12\x19\n\x08gpu_cost\x18\x14 \x01(\x01R\x07gpuCost\x12.\n\x13gpu_cost_adjustment\x18\x15 \x01(\x01R\x11gpuCostAdjustment\x12\x34\n\x16network_transfer_bytes\x18\x16 \x01(\x01R\x14networkTransferBytes\x12\x32\n\x15network_receive_bytes\x18\x17 \x01(\x01R\x13networkReceiveBytes\x12!\n\x0cnetwork_cost\x18\x18 \x01(\x01R\x0bnetworkCost\x12\x35\n\x17network_cross_zone_cost\x18\x19 \x01(\x01R\x14networkCrossZoneCost\x12\x39\n\x19network_cross_region_cost\x18\x1a \x01(\x01R\x16networkCrossRegionCost\x12\x32\n\x15network_internet_cost\x18\x1b \x01(\x01R\x13networkInternetCost\x12\x36\n\x17network_cost_adjustment\x18\x1c \x01(\x01R\x15networkCostAdjustment\x12,\n\x12load_balancer_cost\x18\x1d \x01(\x01R\x10loadBalancerCost\x12\x41\n\x1dload_balancer_cost_adjustment\x18\x1e \x01(\x01R\x1aloadBalancerCostAdjustment\x12\x19\n\x08pv_bytes\x18\x1f \x01(\x01R\x07pvBytes\x12\"\n\rpv_byte_hours\x18  \x01(\x01R\x0bpvByteHours\x12\x17\n\x07pv_cost\x18! \x01(\x01R\x06pvCost\x12,\n\x12pv_cost_adjustment\x18\" \x01(\x01R\x10pvCostAdjustment\x12\x1b\n\tram_bytes\x18# \x01(\x01R\x08ramBytes\x12\x37\n\x18ram_byte_request_average\x18$ \x01(\x01R\x15ramByteRequestAverage\x12\x33\n\x16ram_byte_usage_average\x18% \x01(\x01R\x13ramByteUsageAverage\x12$\n\x0eram_byte_hours\x18& \x01(\x01R\x0cramByteHours\x12\x19\n\x08ram_cost\x18\' \x01(\x01R\x07ramCost\x12.\n\x13ram_cost_adjustment\x18( \x01(\x01R\x11ramCostAdjustment\x12%\n\x0eram_efficiency\x18) \x01(\x01R\rramEfficiency\x12#\n\rexternal_cost\x18* \x01(\x01R\x0c\x65xternalCost\x12\x1f\n\x0bshared_cost\x18+ \x01(\x01R\nsharedCost\x12\x1d\n\ntotal_cost\x18, \x01(\x01R\ttotalCost\x12)\n\x10total_efficiency\x18- \x01(\x01R\x0ftotalEfficiencyB\x9e\x02\n2com.cloud.planton.apis.integration.kubernetes.costB\x08\x41piProtoP\x01\xa2\x02\x06\x43PAIKC\xaa\x02.Cloud.Planton.Apis.Integration.Kubernetes.Cost\xca\x02.Cloud\\Planton\\Apis\\Integration\\Kubernetes\\Cost\xe2\x02:Cloud\\Planton\\Apis\\Integration\\Kubernetes\\Cost\\GPBMetadata\xea\x02\x33\x43loud::Planton::Apis::Integration::Kubernetes::Costb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'cloud.planton.apis.integration.kubernetes.cost.api_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n2com.cloud.planton.apis.integration.kubernetes.costB\010ApiProtoP\001\242\002\006CPAIKC\252\002.Cloud.Planton.Apis.Integration.Kubernetes.Cost\312\002.Cloud\\Planton\\Apis\\Integration\\Kubernetes\\Cost\342\002:Cloud\\Planton\\Apis\\Integration\\Kubernetes\\Cost\\GPBMetadata\352\0023Cloud::Planton::Apis::Integration::Kubernetes::Cost'
  _globals['_COSTALLOCATION']._serialized_start=162
  _globals['_COSTALLOCATION']._serialized_end=1973
# @@protoc_insertion_point(module_scope)
