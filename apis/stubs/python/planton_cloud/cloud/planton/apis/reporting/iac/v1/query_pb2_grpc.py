# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cloud.planton.apis.reporting.iac.v1 import io_pb2 as cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2


class IacResourcesReportingQueryControllerStub(object):
    """iac resources reporting query controller
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getIacResourceCountByContextSummary = channel.unary_unary(
                '/cloud.planton.apis.reporting.iac.v1.IacResourcesReportingQueryController/getIacResourceCountByContextSummary',
                request_serializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.GetIacResourceCountByContextInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.TotalIacResourceCount.FromString,
                _registered_method=True)
        self.getIacResourceCountByContextDetailed = channel.unary_unary(
                '/cloud.planton.apis.reporting.iac.v1.IacResourcesReportingQueryController/getIacResourceCountByContextDetailed',
                request_serializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.GetIacResourceCountByContextInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.IacResourceCountDetailedList.FromString,
                _registered_method=True)
        self.getIacResourceCountTimeSeriesByContext = channel.unary_unary(
                '/cloud.planton.apis.reporting.iac.v1.IacResourcesReportingQueryController/getIacResourceCountTimeSeriesByContext',
                request_serializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.GetIacResourceCountTimeSeriesByContextInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.IacResourceCountTimeSeriesList.FromString,
                _registered_method=True)
        self.getIacResourceCountTimeSeriesByResourceId = channel.unary_unary(
                '/cloud.planton.apis.reporting.iac.v1.IacResourcesReportingQueryController/getIacResourceCountTimeSeriesByResourceId',
                request_serializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.GetIacResourceCountTimeSeriesByResourceIdInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.IacResourceCountTimeSeriesList.FromString,
                _registered_method=True)
        self.getIacResourceCountTimeSeries1hByContext = channel.unary_unary(
                '/cloud.planton.apis.reporting.iac.v1.IacResourcesReportingQueryController/getIacResourceCountTimeSeries1hByContext',
                request_serializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.GetIacResourceCountTimeSeriesByContextInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.IacResourceCountTimeSeriesList.FromString,
                _registered_method=True)
        self.getIacResourceCountTimeSeries1hByResourceId = channel.unary_unary(
                '/cloud.planton.apis.reporting.iac.v1.IacResourcesReportingQueryController/getIacResourceCountTimeSeries1hByResourceId',
                request_serializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.GetIacResourceCountTimeSeriesByResourceIdInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.IacResourceCountTimeSeriesList.FromString,
                _registered_method=True)


class IacResourcesReportingQueryControllerServicer(object):
    """iac resources reporting query controller
    """

    def getIacResourceCountByContextSummary(self, request, context):
        """The getIacResourceCountByContextSummary RPC retrieves the total count of iac resources
        for a given context. This context is defined by the combination of parameters specified in the
        GetIacResourceCountByContextInput message, such as organization and environment identifiers. This operation
        is crucial for understanding the scale of cloud infrastructure managed by a organization for a specific environment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getIacResourceCountByContextDetailed(self, request, context):
        """getIacResourceCountByContextDetailed retrieves detailed information about iac resources
        within a given context. This context is specified by the GetIacResourceCountByContextInput message,
        which includes identifiers for the organization, environment, and potentially other criteria to narrow down the query.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getIacResourceCountTimeSeriesByContext(self, request, context):
        """getIacResourceCountTimeSeriesByContext retrieves a time series of iac resource counts
        within a specified context, defined by the combination of organization and environment identifiers.
        This RPC is designed to provide clients with detailed insights into how resource usage has
        evolved over time, enabling trend analysis, forecasting, and resource optimization strategies.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getIacResourceCountTimeSeriesByResourceId(self, request, context):
        """getIacResourceCountTimeSeriesByResourceId retrieves a time series of iac resource counts
        for a specified resource over a defined time range. This RPC is intended for detailed analysis
        of the usage and count fluctuations of individual iac resources, enabling clients to track
        specific resources' performance and plan for scaling or optimization based on historical data.
        By providing a unique resource ID and a time window (start and end timestamps), clients can
        obtain granular insights into how a particular resource's count has varied over time. This
        capability is crucial for understanding resource utilization trends, identifying potential
        bottlenecks, and making informed decisions about infrastructure management and optimization.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getIacResourceCountTimeSeries1hByContext(self, request, context):
        """getIacResourceCountTimeSeries1hByContext retrieves a time series by 1 hour of iac resource counts
        within a specified context, defined by the combination of organization and environment identifiers.
        This RPC is designed to provide clients with detailed insights into how resource usage has
        evolved over time, enabling trend analysis, forecasting, and resource optimization strategies.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getIacResourceCountTimeSeries1hByResourceId(self, request, context):
        """getIacResourceCountTimeSeries1hByResourceId retrieves a time series by 1 hour of iac resource counts
        for a specified resource over a defined time range. This RPC is intended for detailed analysis
        of the usage and count fluctuations of individual iac resources, enabling clients to track
        specific resources' performance and plan for scaling or optimization based on historical data.

        By providing a unique resource ID and a time window (start and end timestamps), clients can
        obtain granular insights into how a particular resource's count has varied over time. This
        capability is crucial for understanding resource utilization trends, identifying potential
        bottlenecks, and making informed decisions about infrastructure management and optimization.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IacResourcesReportingQueryControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getIacResourceCountByContextSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.getIacResourceCountByContextSummary,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.GetIacResourceCountByContextInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.TotalIacResourceCount.SerializeToString,
            ),
            'getIacResourceCountByContextDetailed': grpc.unary_unary_rpc_method_handler(
                    servicer.getIacResourceCountByContextDetailed,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.GetIacResourceCountByContextInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.IacResourceCountDetailedList.SerializeToString,
            ),
            'getIacResourceCountTimeSeriesByContext': grpc.unary_unary_rpc_method_handler(
                    servicer.getIacResourceCountTimeSeriesByContext,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.GetIacResourceCountTimeSeriesByContextInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.IacResourceCountTimeSeriesList.SerializeToString,
            ),
            'getIacResourceCountTimeSeriesByResourceId': grpc.unary_unary_rpc_method_handler(
                    servicer.getIacResourceCountTimeSeriesByResourceId,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.GetIacResourceCountTimeSeriesByResourceIdInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.IacResourceCountTimeSeriesList.SerializeToString,
            ),
            'getIacResourceCountTimeSeries1hByContext': grpc.unary_unary_rpc_method_handler(
                    servicer.getIacResourceCountTimeSeries1hByContext,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.GetIacResourceCountTimeSeriesByContextInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.IacResourceCountTimeSeriesList.SerializeToString,
            ),
            'getIacResourceCountTimeSeries1hByResourceId': grpc.unary_unary_rpc_method_handler(
                    servicer.getIacResourceCountTimeSeries1hByResourceId,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.GetIacResourceCountTimeSeriesByResourceIdInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.IacResourceCountTimeSeriesList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.reporting.iac.v1.IacResourcesReportingQueryController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.reporting.iac.v1.IacResourcesReportingQueryController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class IacResourcesReportingQueryController(object):
    """iac resources reporting query controller
    """

    @staticmethod
    def getIacResourceCountByContextSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.reporting.iac.v1.IacResourcesReportingQueryController/getIacResourceCountByContextSummary',
            cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.GetIacResourceCountByContextInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.TotalIacResourceCount.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getIacResourceCountByContextDetailed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.reporting.iac.v1.IacResourcesReportingQueryController/getIacResourceCountByContextDetailed',
            cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.GetIacResourceCountByContextInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.IacResourceCountDetailedList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getIacResourceCountTimeSeriesByContext(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.reporting.iac.v1.IacResourcesReportingQueryController/getIacResourceCountTimeSeriesByContext',
            cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.GetIacResourceCountTimeSeriesByContextInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.IacResourceCountTimeSeriesList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getIacResourceCountTimeSeriesByResourceId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.reporting.iac.v1.IacResourcesReportingQueryController/getIacResourceCountTimeSeriesByResourceId',
            cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.GetIacResourceCountTimeSeriesByResourceIdInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.IacResourceCountTimeSeriesList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getIacResourceCountTimeSeries1hByContext(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.reporting.iac.v1.IacResourcesReportingQueryController/getIacResourceCountTimeSeries1hByContext',
            cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.GetIacResourceCountTimeSeriesByContextInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.IacResourceCountTimeSeriesList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getIacResourceCountTimeSeries1hByResourceId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.reporting.iac.v1.IacResourcesReportingQueryController/getIacResourceCountTimeSeries1hByResourceId',
            cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.GetIacResourceCountTimeSeriesByResourceIdInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_reporting_dot_iac_dot_v1_dot_io__pb2.IacResourceCountTimeSeriesList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
