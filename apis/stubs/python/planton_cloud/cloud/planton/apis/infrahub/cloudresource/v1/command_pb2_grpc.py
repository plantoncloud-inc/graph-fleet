# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cloud.planton.apis.commons.apiresource import io_pb2 as cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2
from cloud.planton.apis.infrahub.cloudresource.v1 import api_pb2 as cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2
from cloud.planton.apis.infrahub.cloudresource.v1 import graph_pb2 as cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_graph__pb2
from cloud.planton.apis.infrahub.cloudresource.v1 import io_pb2 as cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_io__pb2
from cloud.planton.apis.resourcemanager.organization.v1 import io_pb2 as cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_io__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class CloudResourceCommandControllerStub(object):
    """cloud-resource command controller
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.apply = channel.unary_unary(
                '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController/apply',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
                _registered_method=True)
        self.create = channel.unary_unary(
                '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController/create',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
                _registered_method=True)
        self.update = channel.unary_unary(
                '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController/update',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
                _registered_method=True)
        self.delete = channel.unary_unary(
                '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController/delete',
                request_serializer=cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2.ApiResourceDeleteInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
                _registered_method=True)
        self.rename = channel.unary_unary(
                '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController/rename',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_io__pb2.RenameCloudResourceRequest.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
                _registered_method=True)
        self.updateOutputs = channel.unary_unary(
                '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController/updateOutputs',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_io__pb2.UpdateCloudResourceOutputsRequest.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
                _registered_method=True)
        self.pipelineApply = channel.unary_unary(
                '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController/pipelineApply',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_io__pb2.CloudResourcePipelineOperationRequest.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
                _registered_method=True)
        self.pipelineDestroy = channel.unary_unary(
                '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController/pipelineDestroy',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_io__pb2.CloudResourcePipelineOperationRequest.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
                _registered_method=True)
        self.cleanup = channel.unary_unary(
                '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController/cleanup',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_io__pb2.CloudResourceId.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class CloudResourceCommandControllerServicer(object):
    """cloud-resource command controller
    """

    def apply(self, request, context):
        """create/update cloud-resource
        the authorization and state-operation are determined depending on whether the cloud-resource
        is going to be created or updated which is determined as part of the request execution.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def create(self, request, context):
        """create cloud-resource
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
        """update an existing cloud-resource
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
        """delete an existing cloud-resource
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def rename(self, request, context):
        """rename a cloud-resource
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateOutputs(self, request, context):
        """update outputs of a cloud-resource from the successfully completed stack-job
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pipelineApply(self, request, context):
        """create/update cloud-resource from a pipeline
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pipelineDestroy(self, request, context):
        """destroy a cloud-resource from a pipeline
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def cleanup(self, request, context):
        """cleanup a cloud-resource in a bad state.
        the bad could be in the form of broken authorization or is in a backward incompatible state etc
        the cleanup would remove the record from the cloud-resource database collection, search system and authorization system.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CloudResourceCommandControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'apply': grpc.unary_unary_rpc_method_handler(
                    servicer.apply,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.SerializeToString,
            ),
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.SerializeToString,
            ),
            'update': grpc.unary_unary_rpc_method_handler(
                    servicer.update,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.SerializeToString,
            ),
            'delete': grpc.unary_unary_rpc_method_handler(
                    servicer.delete,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2.ApiResourceDeleteInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.SerializeToString,
            ),
            'rename': grpc.unary_unary_rpc_method_handler(
                    servicer.rename,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_io__pb2.RenameCloudResourceRequest.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.SerializeToString,
            ),
            'updateOutputs': grpc.unary_unary_rpc_method_handler(
                    servicer.updateOutputs,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_io__pb2.UpdateCloudResourceOutputsRequest.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.SerializeToString,
            ),
            'pipelineApply': grpc.unary_unary_rpc_method_handler(
                    servicer.pipelineApply,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_io__pb2.CloudResourcePipelineOperationRequest.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.SerializeToString,
            ),
            'pipelineDestroy': grpc.unary_unary_rpc_method_handler(
                    servicer.pipelineDestroy,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_io__pb2.CloudResourcePipelineOperationRequest.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.SerializeToString,
            ),
            'cleanup': grpc.unary_unary_rpc_method_handler(
                    servicer.cleanup,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_io__pb2.CloudResourceId.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CloudResourceCommandController(object):
    """cloud-resource command controller
    """

    @staticmethod
    def apply(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController/apply',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController/create',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController/update',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController/delete',
            cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2.ApiResourceDeleteInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def rename(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController/rename',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_io__pb2.RenameCloudResourceRequest.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateOutputs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController/updateOutputs',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_io__pb2.UpdateCloudResourceOutputsRequest.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def pipelineApply(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController/pipelineApply',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_io__pb2.CloudResourcePipelineOperationRequest.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def pipelineDestroy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController/pipelineDestroy',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_io__pb2.CloudResourcePipelineOperationRequest.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_api__pb2.CloudResource.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def cleanup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceCommandController/cleanup',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_io__pb2.CloudResourceId.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class CloudResourceGraphCommandControllerStub(object):
    """cloud-resource graph command controller
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.upsert = channel.unary_unary(
                '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceGraphCommandController/upsert',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_graph__pb2.CloudResourceGraphNode.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.loadCloudResource = channel.unary_unary(
                '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceGraphCommandController/loadCloudResource',
                request_serializer=cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2.ApiResourceId.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.loadOrgCloudResources = channel.unary_unary(
                '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceGraphCommandController/loadOrgCloudResources',
                request_serializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_io__pb2.OrganizationId.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class CloudResourceGraphCommandControllerServicer(object):
    """cloud-resource graph command controller
    """

    def upsert(self, request, context):
        """create or update a node + its cross-resource references
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def loadCloudResource(self, request, context):
        """load one cloud-resource state into Neo4j, identified by its ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def loadOrgCloudResources(self, request, context):
        """Load ALL cloud-resource states belonging to an organization into Neo4j.
        Implementation will call the generic Stream-by-Org RPC internally,
        iterate over the stream, and write each state into Neo4j.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CloudResourceGraphCommandControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'upsert': grpc.unary_unary_rpc_method_handler(
                    servicer.upsert,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_graph__pb2.CloudResourceGraphNode.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'loadCloudResource': grpc.unary_unary_rpc_method_handler(
                    servicer.loadCloudResource,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2.ApiResourceId.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'loadOrgCloudResources': grpc.unary_unary_rpc_method_handler(
                    servicer.loadOrgCloudResources,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_io__pb2.OrganizationId.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceGraphCommandController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceGraphCommandController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CloudResourceGraphCommandController(object):
    """cloud-resource graph command controller
    """

    @staticmethod
    def upsert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceGraphCommandController/upsert',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_graph__pb2.CloudResourceGraphNode.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def loadCloudResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceGraphCommandController/loadCloudResource',
            cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2.ApiResourceId.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def loadOrgCloudResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.cloudresource.v1.CloudResourceGraphCommandController/loadOrgCloudResources',
            cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_io__pb2.OrganizationId.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
