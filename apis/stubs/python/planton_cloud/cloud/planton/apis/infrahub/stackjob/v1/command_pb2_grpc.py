# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cloud.planton.apis.infrahub.cloudresource.v1 import stack_pb2 as cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_stack__pb2
from cloud.planton.apis.infrahub.stackjob.v1 import api_pb2 as cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2
from cloud.planton.apis.infrahub.stackjob.v1 import io_pb2 as cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2
from cloud.planton.apis.infrahub.stackjob.v1 import progress_pb2 as cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_progress__pb2


class StackJobCommandControllerStub(object):
    """stack-job command controller
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.apply = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobCommandController/apply',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
                _registered_method=True)
        self.create = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobCommandController/create',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
                _registered_method=True)
        self.update = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobCommandController/update',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
                _registered_method=True)
        self.delete = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobCommandController/delete',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
                _registered_method=True)
        self.resume = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobCommandController/resume',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
                _registered_method=True)
        self.rerun = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobCommandController/rerun',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
                _registered_method=True)


class StackJobCommandControllerServicer(object):
    """stack-job command controller
    """

    def apply(self, request, context):
        """create/update a stack-job.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def create(self, request, context):
        """create a stack-job.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
        """update a stack-job.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
        """delete a stack-job.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def resume(self, request, context):
        """resume a stack-job in awaiting-approval state for any cloud-resource
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def rerun(self, request, context):
        """re-run an existing stack-job for any cloud-resource
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StackJobCommandControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'apply': grpc.unary_unary_rpc_method_handler(
                    servicer.apply,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.SerializeToString,
            ),
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.SerializeToString,
            ),
            'update': grpc.unary_unary_rpc_method_handler(
                    servicer.update,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.SerializeToString,
            ),
            'delete': grpc.unary_unary_rpc_method_handler(
                    servicer.delete,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.SerializeToString,
            ),
            'resume': grpc.unary_unary_rpc_method_handler(
                    servicer.resume,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.SerializeToString,
            ),
            'rerun': grpc.unary_unary_rpc_method_handler(
                    servicer.rerun,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.infrahub.stackjob.v1.StackJobCommandController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.infrahub.stackjob.v1.StackJobCommandController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class StackJobCommandController(object):
    """stack-job command controller
    """

    @staticmethod
    def apply(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobCommandController/apply',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobCommandController/create',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobCommandController/update',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobCommandController/delete',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def resume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobCommandController/resume',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def rerun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobCommandController/rerun',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class StackJobRunnerControllerStub(object):
    """stack-job runner controller
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.execute = channel.unary_stream(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobRunnerController/execute',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_stack__pb2.CloudResourceStackExecuteInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_progress__pb2.StackJobProgressEvent.FromString,
                _registered_method=True)


class StackJobRunnerControllerServicer(object):
    """stack-job runner controller
    """

    def execute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StackJobRunnerControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'execute': grpc.unary_stream_rpc_method_handler(
                    servicer.execute,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_stack__pb2.CloudResourceStackExecuteInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_progress__pb2.StackJobProgressEvent.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.infrahub.stackjob.v1.StackJobRunnerController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.infrahub.stackjob.v1.StackJobRunnerController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class StackJobRunnerController(object):
    """stack-job runner controller
    """

    @staticmethod
    def execute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobRunnerController/execute',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_cloudresource_dot_v1_dot_stack__pb2.CloudResourceStackExecuteInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_progress__pb2.StackJobProgressEvent.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
