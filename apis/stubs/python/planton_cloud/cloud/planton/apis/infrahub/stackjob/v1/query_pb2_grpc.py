# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cloud.planton.apis.commons.apiresource import find_pb2 as cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_find__pb2
from cloud.planton.apis.commons.apiresource import io_pb2 as cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2
from cloud.planton.apis.infrahub.stackjob.v1 import api_pb2 as cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2
from cloud.planton.apis.infrahub.stackjob.v1 import io_pb2 as cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2
from cloud.planton.apis.infrahub.stackjob.v1 import preflight_pb2 as cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2
from cloud.planton.apis.infrahub.stackjob.v1 import progress_pb2 as cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_progress__pb2
from cloud.planton.apis.resourcemanager.organization.v1 import io_pb2 as cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_io__pb2
from cloud.planton.apis.servicehub.service.v1 import io_pb2 as cloud_dot_planton_dot_apis_dot_servicehub_dot_service_dot_v1_dot_io__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


class StackJobQueryControllerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.listByFilters = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/listByFilters',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.ListStackJobsByFiltersQueryInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobList.FromString,
                _registered_method=True)
        self.get = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/get',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
                _registered_method=True)
        self.getProgressEventStream = channel.unary_stream(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/getProgressEventStream',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_progress__pb2.StackJobProgressEvent.FromString,
                _registered_method=True)
        self.getStackJobStatusStream = channel.unary_stream(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/getStackJobStatusStream',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJobStatus.FromString,
                _registered_method=True)
        self.findIacResourcesByStackJobId = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/findIacResourcesByStackJobId',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.IacResources.FromString,
                _registered_method=True)
        self.getErrorResolutionRecommendation = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/getErrorResolutionRecommendation',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.GetErrorResolutionRecommendationInput.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                _registered_method=True)
        self.findIacResourcesByApiResourceId = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/findIacResourcesByApiResourceId',
                request_serializer=cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2.ApiResourceId.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.IacResources.FromString,
                _registered_method=True)
        self.findServiceStackJobsByEnv = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/findServiceStackJobsByEnv',
                request_serializer=cloud_dot_planton_dot_apis_dot_servicehub_dot_service_dot_v1_dot_io__pb2.ServiceId.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.ServiceEnvStackJobs.FromString,
                _registered_method=True)
        self.streamStackJobsByOrg = channel.unary_stream(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/streamStackJobsByOrg',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StreamStackJobsByOrgInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
                _registered_method=True)
        self.find = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/find',
                request_serializer=cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_find__pb2.FindApiResourcesRequest.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobList.FromString,
                _registered_method=True)


class StackJobQueryControllerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def listByFilters(self, request, context):
        """list of stack-jobs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
        """look up stack-job by stack-job-id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getProgressEventStream(self, request, context):
        """rpc to get stack-job progress event stream
        this rpc is required to support pulumi progress or diff view in the cli client which is an interactive client.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getStackJobStatusStream(self, request, context):
        """rpc to get stack-job status stream
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findIacResourcesByStackJobId(self, request, context):
        """retrieve all iac resources in a pulumi/terraform stack for a given stack-job-id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getErrorResolutionRecommendation(self, request, context):
        """get a recommendation from chat-gpt for a specific error message of a failed stack-job
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findIacResourcesByApiResourceId(self, request, context):
        """retrieve all iac resources in a pulumi/terraform stack for a given api-resource.
        retrieves iac-resources associated with most recent stack-job for a given resource-id.
        todo: this should accept ApiResourceSelector since authorization requires both
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findServiceStackJobsByEnv(self, request, context):
        """rpc to lookup service deployments for each environment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def streamStackJobsByOrg(self, request, context):
        """Streams StackJob execution records for a single organization.

        Used mainly by the Billing service to compute runnerâ€‘minute usage. The call
        emits every StackJob whose execution window overlaps the supplied time range.
        The caller must hold `operator` permission on the `platform` resource kind.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def find(self, request, context):
        """find stack-jobs with pagination and filtering
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StackJobQueryControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'listByFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.listByFilters,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.ListStackJobsByFiltersQueryInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobList.SerializeToString,
            ),
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.SerializeToString,
            ),
            'getProgressEventStream': grpc.unary_stream_rpc_method_handler(
                    servicer.getProgressEventStream,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_progress__pb2.StackJobProgressEvent.SerializeToString,
            ),
            'getStackJobStatusStream': grpc.unary_stream_rpc_method_handler(
                    servicer.getStackJobStatusStream,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJobStatus.SerializeToString,
            ),
            'findIacResourcesByStackJobId': grpc.unary_unary_rpc_method_handler(
                    servicer.findIacResourcesByStackJobId,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.IacResources.SerializeToString,
            ),
            'getErrorResolutionRecommendation': grpc.unary_unary_rpc_method_handler(
                    servicer.getErrorResolutionRecommendation,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.GetErrorResolutionRecommendationInput.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            ),
            'findIacResourcesByApiResourceId': grpc.unary_unary_rpc_method_handler(
                    servicer.findIacResourcesByApiResourceId,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2.ApiResourceId.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.IacResources.SerializeToString,
            ),
            'findServiceStackJobsByEnv': grpc.unary_unary_rpc_method_handler(
                    servicer.findServiceStackJobsByEnv,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_servicehub_dot_service_dot_v1_dot_io__pb2.ServiceId.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.ServiceEnvStackJobs.SerializeToString,
            ),
            'streamStackJobsByOrg': grpc.unary_stream_rpc_method_handler(
                    servicer.streamStackJobsByOrg,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StreamStackJobsByOrgInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.SerializeToString,
            ),
            'find': grpc.unary_unary_rpc_method_handler(
                    servicer.find,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_find__pb2.FindApiResourcesRequest.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class StackJobQueryController(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def listByFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/listByFilters',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.ListStackJobsByFiltersQueryInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/get',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getProgressEventStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/getProgressEventStream',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_progress__pb2.StackJobProgressEvent.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getStackJobStatusStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/getStackJobStatusStream',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJobStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def findIacResourcesByStackJobId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/findIacResourcesByStackJobId',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobId.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.IacResources.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getErrorResolutionRecommendation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/getErrorResolutionRecommendation',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.GetErrorResolutionRecommendationInput.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def findIacResourcesByApiResourceId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/findIacResourcesByApiResourceId',
            cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2.ApiResourceId.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.IacResources.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def findServiceStackJobsByEnv(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/findServiceStackJobsByEnv',
            cloud_dot_planton_dot_apis_dot_servicehub_dot_service_dot_v1_dot_io__pb2.ServiceId.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.ServiceEnvStackJobs.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def streamStackJobsByOrg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/streamStackJobsByOrg',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StreamStackJobsByOrgInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_api__pb2.StackJob.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def find(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobQueryController/find',
            cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_find__pb2.FindApiResourcesRequest.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_io__pb2.StackJobList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class StackJobEssentialsQueryControllerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.check = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobEssentialsQueryController/check',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.CheckStackJobEssentialsInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.CheckStackJobEssentialsResponse.FromString,
                _registered_method=True)
        self.whichStackJobRunner = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobEssentialsQueryController/whichStackJobRunner',
                request_serializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_io__pb2.OrganizationId.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichStackJobEssentialResponse.FromString,
                _registered_method=True)
        self.whichIacModule = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobEssentialsQueryController/whichIacModule',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichIacModuleInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichStackJobEssentialResponse.FromString,
                _registered_method=True)
        self.whichBackendCredential = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobEssentialsQueryController/whichBackendCredential',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichBackendCredentialInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichStackJobEssentialResponse.FromString,
                _registered_method=True)
        self.whichFlowControlPolicy = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobEssentialsQueryController/whichFlowControlPolicy',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichFlowControlPolicyInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichStackJobEssentialResponse.FromString,
                _registered_method=True)
        self.whichProviderCredential = channel.unary_unary(
                '/cloud.planton.apis.infrahub.stackjob.v1.StackJobEssentialsQueryController/whichProviderCredential',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichProviderCredentialInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichStackJobEssentialResponse.FromString,
                _registered_method=True)


class StackJobEssentialsQueryControllerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def check(self, request, context):
        """check essentials required for creating stack-job for a cloud-resource-kind
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def whichStackJobRunner(self, request, context):
        """rpc to get stack-job-runner which will be used for stack-jobs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def whichIacModule(self, request, context):
        """rpc to lookup the iac-module to be used for stack-jobs for a give cloud-resource-kind in a given organization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def whichBackendCredential(self, request, context):
        """rpc to lookup the backend-credential to be used for stack-jobs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def whichFlowControlPolicy(self, request, context):
        """rpc to get the flow-control-policy which will be used for stack-jobs
        authorization is performed on the input.selector.kind and input.selector.id fields
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def whichProviderCredential(self, request, context):
        """rpc to get the provider-credential which will be used for stack-jobs
        authorization is performed on the id of the environment looked up using the information from the input
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StackJobEssentialsQueryControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'check': grpc.unary_unary_rpc_method_handler(
                    servicer.check,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.CheckStackJobEssentialsInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.CheckStackJobEssentialsResponse.SerializeToString,
            ),
            'whichStackJobRunner': grpc.unary_unary_rpc_method_handler(
                    servicer.whichStackJobRunner,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_io__pb2.OrganizationId.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichStackJobEssentialResponse.SerializeToString,
            ),
            'whichIacModule': grpc.unary_unary_rpc_method_handler(
                    servicer.whichIacModule,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichIacModuleInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichStackJobEssentialResponse.SerializeToString,
            ),
            'whichBackendCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.whichBackendCredential,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichBackendCredentialInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichStackJobEssentialResponse.SerializeToString,
            ),
            'whichFlowControlPolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.whichFlowControlPolicy,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichFlowControlPolicyInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichStackJobEssentialResponse.SerializeToString,
            ),
            'whichProviderCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.whichProviderCredential,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichProviderCredentialInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichStackJobEssentialResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.infrahub.stackjob.v1.StackJobEssentialsQueryController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.infrahub.stackjob.v1.StackJobEssentialsQueryController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class StackJobEssentialsQueryController(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def check(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobEssentialsQueryController/check',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.CheckStackJobEssentialsInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.CheckStackJobEssentialsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def whichStackJobRunner(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobEssentialsQueryController/whichStackJobRunner',
            cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_io__pb2.OrganizationId.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichStackJobEssentialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def whichIacModule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobEssentialsQueryController/whichIacModule',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichIacModuleInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichStackJobEssentialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def whichBackendCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobEssentialsQueryController/whichBackendCredential',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichBackendCredentialInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichStackJobEssentialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def whichFlowControlPolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobEssentialsQueryController/whichFlowControlPolicy',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichFlowControlPolicyInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichStackJobEssentialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def whichProviderCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.stackjob.v1.StackJobEssentialsQueryController/whichProviderCredential',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichProviderCredentialInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_stackjob_dot_v1_dot_preflight__pb2.WhichStackJobEssentialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
