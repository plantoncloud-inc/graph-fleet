# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cloud.planton.apis.commons.apiresource import find_pb2 as cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_find__pb2
from cloud.planton.apis.commons.apiresource import io_pb2 as cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2
from cloud.planton.apis.infrahub.infraproject.v1 import api_pb2 as cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_api__pb2
from cloud.planton.apis.infrahub.infraproject.v1 import io_pb2 as cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_io__pb2


class InfraProjectQueryControllerStub(object):
    """infra-project query controller
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get = channel.unary_unary(
                '/cloud.planton.apis.infrahub.infraproject.v1.InfraProjectQueryController/get',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_io__pb2.InfraProjectId.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_api__pb2.InfraProject.FromString,
                _registered_method=True)
        self.find = channel.unary_unary(
                '/cloud.planton.apis.infrahub.infraproject.v1.InfraProjectQueryController/find',
                request_serializer=cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_find__pb2.FindApiResourcesRequest.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_io__pb2.InfraProjectList.FromString,
                _registered_method=True)
        self.getByOrgBySlug = channel.unary_unary(
                '/cloud.planton.apis.infrahub.infraproject.v1.InfraProjectQueryController/getByOrgBySlug',
                request_serializer=cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2.ApiResourceByOrgBySlugRequest.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_api__pb2.InfraProject.FromString,
                _registered_method=True)
        self.build = channel.unary_unary(
                '/cloud.planton.apis.infrahub.infraproject.v1.InfraProjectQueryController/build',
                request_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_api__pb2.InfraProject.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_api__pb2.InfraProject.FromString,
                _registered_method=True)


class InfraProjectQueryControllerServicer(object):
    """infra-project query controller
    """

    def get(self, request, context):
        """lookup a infra-project using id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def find(self, request, context):
        """find infra-projects with pagination and filtering
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getByOrgBySlug(self, request, context):
        """lookup using org and name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def build(self, request, context):
        """rpc to build infra-project from infra-chart templates and params.
        this is useful to display the changes to rendered yaml and dag in real-time on the console app.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InfraProjectQueryControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_io__pb2.InfraProjectId.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_api__pb2.InfraProject.SerializeToString,
            ),
            'find': grpc.unary_unary_rpc_method_handler(
                    servicer.find,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_find__pb2.FindApiResourcesRequest.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_io__pb2.InfraProjectList.SerializeToString,
            ),
            'getByOrgBySlug': grpc.unary_unary_rpc_method_handler(
                    servicer.getByOrgBySlug,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2.ApiResourceByOrgBySlugRequest.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_api__pb2.InfraProject.SerializeToString,
            ),
            'build': grpc.unary_unary_rpc_method_handler(
                    servicer.build,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_api__pb2.InfraProject.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_api__pb2.InfraProject.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.infrahub.infraproject.v1.InfraProjectQueryController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.infrahub.infraproject.v1.InfraProjectQueryController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class InfraProjectQueryController(object):
    """infra-project query controller
    """

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.infraproject.v1.InfraProjectQueryController/get',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_io__pb2.InfraProjectId.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_api__pb2.InfraProject.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def find(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.infraproject.v1.InfraProjectQueryController/find',
            cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_find__pb2.FindApiResourcesRequest.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_io__pb2.InfraProjectList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getByOrgBySlug(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.infraproject.v1.InfraProjectQueryController/getByOrgBySlug',
            cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2.ApiResourceByOrgBySlugRequest.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_api__pb2.InfraProject.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def build(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.infrahub.infraproject.v1.InfraProjectQueryController/build',
            cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_api__pb2.InfraProject.SerializeToString,
            cloud_dot_planton_dot_apis_dot_infrahub_dot_infraproject_dot_v1_dot_api__pb2.InfraProject.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
