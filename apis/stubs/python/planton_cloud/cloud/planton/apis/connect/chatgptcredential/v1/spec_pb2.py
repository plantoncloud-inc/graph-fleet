# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cloud/planton/apis/connect/chatgptcredential/v1/spec.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'cloud/planton/apis/connect/chatgptcredential/v1/spec.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2
from cloud.planton.apis.commons.apiresource import selector_pb2 as cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_selector__pb2
from project.planton.shared.options import options_pb2 as project_dot_planton_dot_shared_dot_options_dot_options__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n:cloud/planton/apis/connect/chatgptcredential/v1/spec.proto\x12/cloud.planton.apis.connect.chatgptcredential.v1\x1a\x1b\x62uf/validate/validate.proto\x1a\x35\x63loud/planton/apis/commons/apiresource/selector.proto\x1a,project/planton/shared/options/options.proto\"\xfe\x01\n\x15\x43hatGptCredentialSpec\x12W\n\x08selector\x18\x01 \x01(\x0b\x32;.cloud.planton.apis.commons.apiresource.ApiResourceSelectorR\x08selector\x12\x38\n\x07\x61pi_url\x18\x02 \x01(\tB\x1a\x8a\xa6\x1d\x16https://api.openai.comH\x00R\x06\x61piUrl\x88\x01\x01\x12\x1f\n\x07\x61pi_key\x18\x03 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x06\x61piKey\x12%\n\x08model_id\x18\x04 \x01(\tB\n\x92\xa6\x1d\x06gpt-4oR\x07modelIdB\n\n\x08_api_urlB\xa3\x02\n3com.cloud.planton.apis.connect.chatgptcredential.v1B\tSpecProtoP\x01\xa2\x02\x05\x43PACC\xaa\x02/Cloud.Planton.Apis.Connect.Chatgptcredential.V1\xca\x02/Cloud\\Planton\\Apis\\Connect\\Chatgptcredential\\V1\xe2\x02;Cloud\\Planton\\Apis\\Connect\\Chatgptcredential\\V1\\GPBMetadata\xea\x02\x34\x43loud::Planton::Apis::Connect::Chatgptcredential::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'cloud.planton.apis.connect.chatgptcredential.v1.spec_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n3com.cloud.planton.apis.connect.chatgptcredential.v1B\tSpecProtoP\001\242\002\005CPACC\252\002/Cloud.Planton.Apis.Connect.Chatgptcredential.V1\312\002/Cloud\\Planton\\Apis\\Connect\\Chatgptcredential\\V1\342\002;Cloud\\Planton\\Apis\\Connect\\Chatgptcredential\\V1\\GPBMetadata\352\0024Cloud::Planton::Apis::Connect::Chatgptcredential::V1'
  _globals['_CHATGPTCREDENTIALSPEC'].fields_by_name['api_url']._loaded_options = None
  _globals['_CHATGPTCREDENTIALSPEC'].fields_by_name['api_url']._serialized_options = b'\212\246\035\026https://api.openai.com'
  _globals['_CHATGPTCREDENTIALSPEC'].fields_by_name['api_key']._loaded_options = None
  _globals['_CHATGPTCREDENTIALSPEC'].fields_by_name['api_key']._serialized_options = b'\272H\003\310\001\001'
  _globals['_CHATGPTCREDENTIALSPEC'].fields_by_name['model_id']._loaded_options = None
  _globals['_CHATGPTCREDENTIALSPEC'].fields_by_name['model_id']._serialized_options = b'\222\246\035\006gpt-4o'
  _globals['_CHATGPTCREDENTIALSPEC']._serialized_start=242
  _globals['_CHATGPTCREDENTIALSPEC']._serialized_end=496
# @@protoc_insertion_point(module_scope)
