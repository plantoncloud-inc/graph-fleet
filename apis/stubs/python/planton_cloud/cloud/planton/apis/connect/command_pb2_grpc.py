# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cloud.planton.apis.connect import io_pb2 as cloud_dot_planton_dot_apis_dot_connect_dot_io__pb2
from cloud.planton.apis.resourcemanager.environment.v1 import io_pb2 as cloud_dot_planton_dot_apis_dot_resourcemanager_dot_environment_dot_v1_dot_io__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ProviderCredentialSharingCommandControllerStub(object):
    """provider-credential sharing command controller
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.share = channel.unary_unary(
                '/cloud.planton.apis.connect.ProviderCredentialSharingCommandController/share',
                request_serializer=cloud_dot_planton_dot_apis_dot_connect_dot_io__pb2.ShareProviderCredentialInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_environment_dot_v1_dot_io__pb2.EnvironmentId.FromString,
                _registered_method=True)
        self.unshare = channel.unary_unary(
                '/cloud.planton.apis.connect.ProviderCredentialSharingCommandController/unshare',
                request_serializer=cloud_dot_planton_dot_apis_dot_connect_dot_io__pb2.UnshareProviderCredentialInput.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class ProviderCredentialSharingCommandControllerServicer(object):
    """provider-credential sharing command controller
    """

    def share(self, request, context):
        """authorization is performed on the provider_credential.kind and provider_credential.id fields
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def unshare(self, request, context):
        """authorization is performed on the provider_credential.kind and provider_credential.id fields
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProviderCredentialSharingCommandControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'share': grpc.unary_unary_rpc_method_handler(
                    servicer.share,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_connect_dot_io__pb2.ShareProviderCredentialInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_environment_dot_v1_dot_io__pb2.EnvironmentId.SerializeToString,
            ),
            'unshare': grpc.unary_unary_rpc_method_handler(
                    servicer.unshare,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_connect_dot_io__pb2.UnshareProviderCredentialInput.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.connect.ProviderCredentialSharingCommandController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.connect.ProviderCredentialSharingCommandController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ProviderCredentialSharingCommandController(object):
    """provider-credential sharing command controller
    """

    @staticmethod
    def share(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.connect.ProviderCredentialSharingCommandController/share',
            cloud_dot_planton_dot_apis_dot_connect_dot_io__pb2.ShareProviderCredentialInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_resourcemanager_dot_environment_dot_v1_dot_io__pb2.EnvironmentId.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def unshare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.connect.ProviderCredentialSharingCommandController/unshare',
            cloud_dot_planton_dot_apis_dot_connect_dot_io__pb2.UnshareProviderCredentialInput.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
