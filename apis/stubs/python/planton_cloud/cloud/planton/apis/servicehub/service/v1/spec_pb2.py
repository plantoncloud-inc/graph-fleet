# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cloud/planton/apis/servicehub/service/v1/spec.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'cloud/planton/apis/servicehub/service/v1/spec.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2
from cloud.planton.apis.commons.apiresource import field_options_pb2 as cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_field__options__pb2
from cloud.planton.apis.integration.vcs import github_pb2 as cloud_dot_planton_dot_apis_dot_integration_dot_vcs_dot_github__pb2
from cloud.planton.apis.integration.vcs import provider_pb2 as cloud_dot_planton_dot_apis_dot_integration_dot_vcs_dot_provider__pb2
from cloud.planton.apis.servicehub.service.v1 import enum_pb2 as cloud_dot_planton_dot_apis_dot_servicehub_dot_service_dot_v1_dot_enum__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n3cloud/planton/apis/servicehub/service/v1/spec.proto\x12(cloud.planton.apis.servicehub.service.v1\x1a\x1b\x62uf/validate/validate.proto\x1a:cloud/planton/apis/commons/apiresource/field_options.proto\x1a/cloud/planton/apis/integration/vcs/github.proto\x1a\x31\x63loud/planton/apis/integration/vcs/provider.proto\x1a\x33\x63loud/planton/apis/servicehub/service/v1/enum.proto\"\x82\x05\n\x0bServiceSpec\x12 \n\x0b\x64\x65scription\x18\x01 \x01(\tR\x0b\x64\x65scription\x12S\n\x08git_repo\x18\x02 \x01(\x0b\x32\x38.cloud.planton.apis.servicehub.service.v1.ServiceGitRepoR\x07gitRepo\x12\x1d\n\nwebhook_id\x18\x03 \x01(\tR\twebhookId\x12}\n\x16pipeline_configuration\x18\x04 \x01(\x0b\x32\x46.cloud.planton.apis.servicehub.service.v1.ServicePipelineConfigurationR\x15pipelineConfiguration\x12_\n\x07ingress\x18\x05 \x01(\x0b\x32\x45.cloud.planton.apis.servicehub.service.v1.ServiceIngressConfigurationR\x07ingress\x12\x37\n\x17\x64\x65ployment_environments\x18\x06 \x03(\tR\x16\x64\x65ploymentEnvironments\x12\x64\n\x0cpackage_type\x18\x07 \x01(\x0e\x32\x41.cloud.planton.apis.servicehub.service.v1.ServiceSpec.PackageTypeR\x0bpackageType\"^\n\x0bPackageType\x12\x1c\n\x18package_type_unspecified\x10\x00\x12\x13\n\x0f\x63ontainer_image\x10\x01\x12\x1c\n\x18\x63loudflare_worker_script\x10\x02\"\x8f\x04\n\x0eServiceGitRepo\x12\x1d\n\nowner_name\x18\x01 \x01(\tR\townerName\x12)\n\x04name\x18\x02 \x01(\tB\x15\xb8\xb8\x18\x01\xc2\xb8\x18\rgit_repo_nameR\x04name\x12%\n\x0e\x64\x65\x66\x61ult_branch\x18\x03 \x01(\tR\rdefaultBranch\x12\x1f\n\x0b\x62rowser_url\x18\x04 \x01(\tR\nbrowserUrl\x12\x1b\n\tclone_url\x18\x05 \x01(\tR\x08\x63loneUrl\x12u\n\x11git_repo_provider\x18\x06 \x01(\x0e\x32\x33.cloud.planton.apis.integration.vcs.GitRepoProviderB\x14\xb8\xb8\x18\x01\xc2\xb8\x18\x0cgit_providerR\x0fgitRepoProvider\x12O\n\x0bgithub_repo\x18\x07 \x01(\x0b\x32..cloud.planton.apis.integration.vcs.GithubRepoR\ngithubRepo\x12!\n\x0cproject_root\x18\x08 \x01(\tR\x0bprojectRoot\x12#\n\rtrigger_paths\x18\t \x03(\tR\x0ctriggerPaths\x12>\n\x1bsparse_checkout_directories\x18\n \x03(\tR\x19sparseCheckoutDirectories\"\xa4\x06\n\x1cServicePipelineConfiguration\x12g\n\x11pipeline_provider\x18\x01 \x01(\x0e\x32:.cloud.planton.apis.servicehub.service.v1.PipelineProviderR\x10pipelineProvider\x12\x43\n\x1etekton_pipeline_yaml_directory\x18\x02 \x01(\tR\x1btektonPipelineYamlDirectory\x12h\n\x12image_build_method\x18\x03 \x01(\x0e\x32:.cloud.planton.apis.servicehub.service.v1.ImageBuildMethodR\x10imageBuildMethod\x12+\n\x11\x64isable_pipelines\x18\x04 \x01(\x08R\x10\x64isablePipelines\x12/\n\x13\x64isable_deployments\x18\x05 \x01(\x08R\x12\x64isableDeployments\x12\x45\n\x1f\x65nable_pull_request_deployments\x18\x06 \x01(\x08R\x1c\x65nablePullRequestDeployments\x12:\n\x15image_repository_path\x18\x07 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x13imageRepositoryPath\x12j\n\x06params\x18\x08 \x03(\x0b\x32R.cloud.planton.apis.servicehub.service.v1.ServicePipelineConfiguration.ParamsEntryR\x06params\x12\'\n\x0fpipeline_branch\x18\t \x01(\tR\x0epipelineBranch\x12;\n\x1a\x65nable_pull_request_builds\x18\n \x01(\x08R\x17\x65nablePullRequestBuilds\x1a\x39\n\x0bParamsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\"[\n\x1bServiceIngressConfiguration\x12\x18\n\x07\x65nabled\x18\x01 \x01(\x08R\x07\x65nabled\x12\"\n\rdns_domain_id\x18\x02 \x01(\tR\x0b\x64nsDomainIdB\x80\x02\n,com.cloud.planton.apis.servicehub.service.v1B\tSpecProtoP\x01\xa2\x02\x05\x43PASS\xaa\x02(Cloud.Planton.Apis.Servicehub.Service.V1\xca\x02(Cloud\\Planton\\Apis\\Servicehub\\Service\\V1\xe2\x02\x34\x43loud\\Planton\\Apis\\Servicehub\\Service\\V1\\GPBMetadata\xea\x02-Cloud::Planton::Apis::Servicehub::Service::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'cloud.planton.apis.servicehub.service.v1.spec_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n,com.cloud.planton.apis.servicehub.service.v1B\tSpecProtoP\001\242\002\005CPASS\252\002(Cloud.Planton.Apis.Servicehub.Service.V1\312\002(Cloud\\Planton\\Apis\\Servicehub\\Service\\V1\342\0024Cloud\\Planton\\Apis\\Servicehub\\Service\\V1\\GPBMetadata\352\002-Cloud::Planton::Apis::Servicehub::Service::V1'
  _globals['_SERVICEGITREPO'].fields_by_name['name']._loaded_options = None
  _globals['_SERVICEGITREPO'].fields_by_name['name']._serialized_options = b'\270\270\030\001\302\270\030\rgit_repo_name'
  _globals['_SERVICEGITREPO'].fields_by_name['git_repo_provider']._loaded_options = None
  _globals['_SERVICEGITREPO'].fields_by_name['git_repo_provider']._serialized_options = b'\270\270\030\001\302\270\030\014git_provider'
  _globals['_SERVICEPIPELINECONFIGURATION_PARAMSENTRY']._loaded_options = None
  _globals['_SERVICEPIPELINECONFIGURATION_PARAMSENTRY']._serialized_options = b'8\001'
  _globals['_SERVICEPIPELINECONFIGURATION'].fields_by_name['image_repository_path']._loaded_options = None
  _globals['_SERVICEPIPELINECONFIGURATION'].fields_by_name['image_repository_path']._serialized_options = b'\272H\003\310\001\001'
  _globals['_SERVICESPEC']._serialized_start=340
  _globals['_SERVICESPEC']._serialized_end=982
  _globals['_SERVICESPEC_PACKAGETYPE']._serialized_start=888
  _globals['_SERVICESPEC_PACKAGETYPE']._serialized_end=982
  _globals['_SERVICEGITREPO']._serialized_start=985
  _globals['_SERVICEGITREPO']._serialized_end=1512
  _globals['_SERVICEPIPELINECONFIGURATION']._serialized_start=1515
  _globals['_SERVICEPIPELINECONFIGURATION']._serialized_end=2319
  _globals['_SERVICEPIPELINECONFIGURATION_PARAMSENTRY']._serialized_start=2262
  _globals['_SERVICEPIPELINECONFIGURATION_PARAMSENTRY']._serialized_end=2319
  _globals['_SERVICEINGRESSCONFIGURATION']._serialized_start=2321
  _globals['_SERVICEINGRESSCONFIGURATION']._serialized_end=2412
# @@protoc_insertion_point(module_scope)
