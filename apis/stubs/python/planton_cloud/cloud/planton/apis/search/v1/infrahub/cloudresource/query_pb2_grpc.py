# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cloud.planton.apis.commons.apiresource import io_pb2 as cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2
from cloud.planton.apis.search.v1.apiresource import record_pb2 as cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_record__pb2
from cloud.planton.apis.search.v1.infrahub.cloudresource import io_pb2 as cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2


class CloudResourceSearchQueryControllerStub(object):
    """cloud-resource search query controller
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getCloudResourcesCanvasView = channel.unary_unary(
                '/cloud.planton.apis.search.v1.infrahub.cloudresource.CloudResourceSearchQueryController/getCloudResourcesCanvasView',
                request_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2.ExploreCloudResourcesRequest.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2.ExploreCloudResourcesCanvasViewResponse.FromString,
                _registered_method=True)
        self.lookupCloudResource = channel.unary_unary(
                '/cloud.planton.apis.search.v1.infrahub.cloudresource.CloudResourceSearchQueryController/lookupCloudResource',
                request_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2.LookupCloudResourceInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_record__pb2.ApiResourceSearchRecord.FromString,
                _registered_method=True)
        self.getCloudResourceCountsGroupedByKind = channel.unary_unary(
                '/cloud.planton.apis.search.v1.infrahub.cloudresource.CloudResourceSearchQueryController/getCloudResourceCountsGroupedByKind',
                request_serializer=cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2.CloudResourceOwner.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2.CloudResourceCountsGroupedByKind.FromString,
                _registered_method=True)
        self.getCloudResourceCountsGroupedByKindFiltered = channel.unary_unary(
                '/cloud.planton.apis.search.v1.infrahub.cloudresource.CloudResourceSearchQueryController/getCloudResourceCountsGroupedByKindFiltered',
                request_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2.GetCloudResourceCountsGroupedByKindInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2.CloudResourceCountsGroupedByKind.FromString,
                _registered_method=True)


class CloudResourceSearchQueryControllerServicer(object):
    """cloud-resource search query controller
    """

    def getCloudResourcesCanvasView(self, request, context):
        """The `getDeployedResourcesCanvasView` RPC service method enables clients to find resources
        associated with the canvas context.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def lookupCloudResource(self, request, context):
        """rpc to lookup a cloud-resource
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getCloudResourceCountsGroupedByKind(self, request, context):
        """rpc to get cloud resource counts grouped by kind
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getCloudResourceCountsGroupedByKindFiltered(self, request, context):
        """Returns the number of cloud‑resources grouped by `kind`, filtered by
        • org / env context (mandatory)
        • an optional free‑text substring match on `kind`
        • an optional list of cloud providers to include

        If either `search_kind` or `providers` is empty, that filter is ignored.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CloudResourceSearchQueryControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getCloudResourcesCanvasView': grpc.unary_unary_rpc_method_handler(
                    servicer.getCloudResourcesCanvasView,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2.ExploreCloudResourcesRequest.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2.ExploreCloudResourcesCanvasViewResponse.SerializeToString,
            ),
            'lookupCloudResource': grpc.unary_unary_rpc_method_handler(
                    servicer.lookupCloudResource,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2.LookupCloudResourceInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_record__pb2.ApiResourceSearchRecord.SerializeToString,
            ),
            'getCloudResourceCountsGroupedByKind': grpc.unary_unary_rpc_method_handler(
                    servicer.getCloudResourceCountsGroupedByKind,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2.CloudResourceOwner.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2.CloudResourceCountsGroupedByKind.SerializeToString,
            ),
            'getCloudResourceCountsGroupedByKindFiltered': grpc.unary_unary_rpc_method_handler(
                    servicer.getCloudResourceCountsGroupedByKindFiltered,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2.GetCloudResourceCountsGroupedByKindInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2.CloudResourceCountsGroupedByKind.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.search.v1.infrahub.cloudresource.CloudResourceSearchQueryController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.search.v1.infrahub.cloudresource.CloudResourceSearchQueryController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CloudResourceSearchQueryController(object):
    """cloud-resource search query controller
    """

    @staticmethod
    def getCloudResourcesCanvasView(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.search.v1.infrahub.cloudresource.CloudResourceSearchQueryController/getCloudResourcesCanvasView',
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2.ExploreCloudResourcesRequest.SerializeToString,
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2.ExploreCloudResourcesCanvasViewResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def lookupCloudResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.search.v1.infrahub.cloudresource.CloudResourceSearchQueryController/lookupCloudResource',
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2.LookupCloudResourceInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_record__pb2.ApiResourceSearchRecord.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getCloudResourceCountsGroupedByKind(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.search.v1.infrahub.cloudresource.CloudResourceSearchQueryController/getCloudResourceCountsGroupedByKind',
            cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2.CloudResourceOwner.SerializeToString,
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2.CloudResourceCountsGroupedByKind.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getCloudResourceCountsGroupedByKindFiltered(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.search.v1.infrahub.cloudresource.CloudResourceSearchQueryController/getCloudResourceCountsGroupedByKindFiltered',
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2.GetCloudResourceCountsGroupedByKindInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_cloudresource_dot_io__pb2.CloudResourceCountsGroupedByKind.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
