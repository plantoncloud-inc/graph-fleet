# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cloud.planton.apis.search.v1.apiresource import io_pb2 as cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2
from cloud.planton.apis.search.v1.resourcemanager import io_pb2 as cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_resourcemanager_dot_io__pb2


class ResourceManagerSearchQueryControllerStub(object):
    """resource-manager search query controller
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getContextHierarchy = channel.unary_unary(
                '/cloud.planton.apis.search.v1.resourcemanager.ResourceManagerSearchQueryController/getContextHierarchy',
                request_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_resourcemanager_dot_io__pb2.GetContextHierarchyInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_resourcemanager_dot_io__pb2.OrganizationContextHierarchy.FromString,
                _registered_method=True)
        self.searchQuickActions = channel.unary_unary(
                '/cloud.planton.apis.search.v1.resourcemanager.ResourceManagerSearchQueryController/searchQuickActions',
                request_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_resourcemanager_dot_io__pb2.SearchQuickActionsRequest.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2.ApiResourceSearchRecordList.FromString,
                _registered_method=True)


class ResourceManagerSearchQueryControllerServicer(object):
    """resource-manager search query controller
    """

    def getContextHierarchy(self, request, context):
        """rpc to get hierarchy of organizations and environments that the user has access to.
        this is used to render the context switcher in the UI.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def searchQuickActions(self, request, context):
        """rpc to search quick-actions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ResourceManagerSearchQueryControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getContextHierarchy': grpc.unary_unary_rpc_method_handler(
                    servicer.getContextHierarchy,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_resourcemanager_dot_io__pb2.GetContextHierarchyInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_resourcemanager_dot_io__pb2.OrganizationContextHierarchy.SerializeToString,
            ),
            'searchQuickActions': grpc.unary_unary_rpc_method_handler(
                    servicer.searchQuickActions,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_resourcemanager_dot_io__pb2.SearchQuickActionsRequest.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2.ApiResourceSearchRecordList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.search.v1.resourcemanager.ResourceManagerSearchQueryController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.search.v1.resourcemanager.ResourceManagerSearchQueryController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ResourceManagerSearchQueryController(object):
    """resource-manager search query controller
    """

    @staticmethod
    def getContextHierarchy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.search.v1.resourcemanager.ResourceManagerSearchQueryController/getContextHierarchy',
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_resourcemanager_dot_io__pb2.GetContextHierarchyInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_resourcemanager_dot_io__pb2.OrganizationContextHierarchy.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def searchQuickActions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.search.v1.resourcemanager.ResourceManagerSearchQueryController/searchQuickActions',
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_resourcemanager_dot_io__pb2.SearchQuickActionsRequest.SerializeToString,
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2.ApiResourceSearchRecordList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
