# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cloud.planton.apis.search.v1.apiresource import io_pb2 as cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2
from cloud.planton.apis.search.v1.infrahub import io_pb2 as cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_io__pb2


class InfraHubSearchQueryControllerStub(object):
    """infra-hub search query controller
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.findDeploymentComponentIacModulesByOrgContext = channel.unary_unary(
                '/cloud.planton.apis.search.v1.infrahub.InfraHubSearchQueryController/findDeploymentComponentIacModulesByOrgContext',
                request_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_io__pb2.FindDeploymentComponentIacModulesByOrgContextInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2.ApiResourceSearchRecordList.FromString,
                _registered_method=True)
        self.searchDeploymentComponentsByFilter = channel.unary_unary(
                '/cloud.planton.apis.search.v1.infrahub.InfraHubSearchQueryController/searchDeploymentComponentsByFilter',
                request_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_io__pb2.SearchDeploymentComponentsByFilterInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2.ApiResourceSearchRecordList.FromString,
                _registered_method=True)
        self.searchIacModulesByOrgContext = channel.unary_unary(
                '/cloud.planton.apis.search.v1.infrahub.InfraHubSearchQueryController/searchIacModulesByOrgContext',
                request_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_io__pb2.SearchIacModulesByOrgContextInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2.ApiResourceSearchRecordList.FromString,
                _registered_method=True)
        self.searchOfficialIacModules = channel.unary_unary(
                '/cloud.planton.apis.search.v1.infrahub.InfraHubSearchQueryController/searchOfficialIacModules',
                request_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_io__pb2.SearchOfficialIacModulesInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2.ApiResourceSearchRecordList.FromString,
                _registered_method=True)


class InfraHubSearchQueryControllerServicer(object):
    """infra-hub search query controller
    """

    def findDeploymentComponentIacModulesByOrgContext(self, request, context):
        """The `findDeploymentComponentIacModulesByOrgContext` RPC service method enables clients to lookup IaC modules
        for a deployment component within a specified organization's context. This requires appropriate permissions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def searchDeploymentComponentsByFilter(self, request, context):
        """The `searchDeploymentComponentsByFilter` RPC service method enables clients to execute a search operation
        based on specific filters for deployment components. This method is publicly accessible.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def searchIacModulesByOrgContext(self, request, context):
        """The `searchIacModulesByOrgContext` RPC service method enables clients to search IaC modules
        within a specified organization's context. This requires appropriate permissions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def searchOfficialIacModules(self, request, context):
        """The `searchOfficialIacModules` RPC service method enables clients to search for official IaC modules.
        This method is publicly accessible.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InfraHubSearchQueryControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'findDeploymentComponentIacModulesByOrgContext': grpc.unary_unary_rpc_method_handler(
                    servicer.findDeploymentComponentIacModulesByOrgContext,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_io__pb2.FindDeploymentComponentIacModulesByOrgContextInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2.ApiResourceSearchRecordList.SerializeToString,
            ),
            'searchDeploymentComponentsByFilter': grpc.unary_unary_rpc_method_handler(
                    servicer.searchDeploymentComponentsByFilter,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_io__pb2.SearchDeploymentComponentsByFilterInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2.ApiResourceSearchRecordList.SerializeToString,
            ),
            'searchIacModulesByOrgContext': grpc.unary_unary_rpc_method_handler(
                    servicer.searchIacModulesByOrgContext,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_io__pb2.SearchIacModulesByOrgContextInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2.ApiResourceSearchRecordList.SerializeToString,
            ),
            'searchOfficialIacModules': grpc.unary_unary_rpc_method_handler(
                    servicer.searchOfficialIacModules,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_io__pb2.SearchOfficialIacModulesInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2.ApiResourceSearchRecordList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.search.v1.infrahub.InfraHubSearchQueryController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.search.v1.infrahub.InfraHubSearchQueryController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class InfraHubSearchQueryController(object):
    """infra-hub search query controller
    """

    @staticmethod
    def findDeploymentComponentIacModulesByOrgContext(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.search.v1.infrahub.InfraHubSearchQueryController/findDeploymentComponentIacModulesByOrgContext',
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_io__pb2.FindDeploymentComponentIacModulesByOrgContextInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2.ApiResourceSearchRecordList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def searchDeploymentComponentsByFilter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.search.v1.infrahub.InfraHubSearchQueryController/searchDeploymentComponentsByFilter',
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_io__pb2.SearchDeploymentComponentsByFilterInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2.ApiResourceSearchRecordList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def searchIacModulesByOrgContext(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.search.v1.infrahub.InfraHubSearchQueryController/searchIacModulesByOrgContext',
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_io__pb2.SearchIacModulesByOrgContextInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2.ApiResourceSearchRecordList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def searchOfficialIacModules(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.search.v1.infrahub.InfraHubSearchQueryController/searchOfficialIacModules',
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_infrahub_dot_io__pb2.SearchOfficialIacModulesInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2.ApiResourceSearchRecordList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
