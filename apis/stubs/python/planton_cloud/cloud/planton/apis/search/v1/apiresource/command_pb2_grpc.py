# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cloud.planton.apis.search.v1.apiresource import api_docs_pb2 as cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_api__docs__pb2
from cloud.planton.apis.search.v1.apiresource import io_pb2 as cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2
from cloud.planton.apis.search.v1.apiresource import record_pb2 as cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_record__pb2
from cloud.planton.apis.search.v1.apiresource import reindex_pb2 as cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_reindex__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ApiResourceSearchCommandControllerStub(object):
    """api-resource search command controller
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.addRecord = channel.unary_unary(
                '/cloud.planton.apis.search.v1.apiresource.ApiResourceSearchCommandController/addRecord',
                request_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_record__pb2.ApiResourceSearchRecord.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_record__pb2.ApiResourceSearchRecord.FromString,
                _registered_method=True)
        self.deleteByQuery = channel.unary_unary(
                '/cloud.planton.apis.search.v1.apiresource.ApiResourceSearchCommandController/deleteByQuery',
                request_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2.ApiResourceSearchQueryInput.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.indexApiDocs = channel.unary_stream(
                '/cloud.planton.apis.search.v1.apiresource.ApiResourceSearchCommandController/indexApiDocs',
                request_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_api__docs__pb2.IndexApiDocsRequest.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_api__docs__pb2.IndexApiDocsProgressResponse.FromString,
                _registered_method=True)
        self.reindex = channel.unary_unary(
                '/cloud.planton.apis.search.v1.apiresource.ApiResourceSearchCommandController/reindex',
                request_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_reindex__pb2.SearchReindexRequest.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_reindex__pb2.SearchReindexResponse.FromString,
                _registered_method=True)


class ApiResourceSearchCommandControllerServicer(object):
    """api-resource search command controller
    """

    def addRecord(self, request, context):
        """add an api-resource-record to search index
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteByQuery(self, request, context):
        """delete api-resource-records from search using a raw Solr query
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def indexApiDocs(self, request, context):
        """index api-docs for the specified version in the input
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def reindex(self, request, context):
        """re-index all API resources for an organization into Solr
        triggers a Temporal workflow that iterates through all (or specified) API resource kinds,
        fetches resources using the find operation, and indexes them into Solr
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiResourceSearchCommandControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'addRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.addRecord,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_record__pb2.ApiResourceSearchRecord.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_record__pb2.ApiResourceSearchRecord.SerializeToString,
            ),
            'deleteByQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteByQuery,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2.ApiResourceSearchQueryInput.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'indexApiDocs': grpc.unary_stream_rpc_method_handler(
                    servicer.indexApiDocs,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_api__docs__pb2.IndexApiDocsRequest.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_api__docs__pb2.IndexApiDocsProgressResponse.SerializeToString,
            ),
            'reindex': grpc.unary_unary_rpc_method_handler(
                    servicer.reindex,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_reindex__pb2.SearchReindexRequest.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_reindex__pb2.SearchReindexResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.search.v1.apiresource.ApiResourceSearchCommandController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.search.v1.apiresource.ApiResourceSearchCommandController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ApiResourceSearchCommandController(object):
    """api-resource search command controller
    """

    @staticmethod
    def addRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.search.v1.apiresource.ApiResourceSearchCommandController/addRecord',
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_record__pb2.ApiResourceSearchRecord.SerializeToString,
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_record__pb2.ApiResourceSearchRecord.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteByQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.search.v1.apiresource.ApiResourceSearchCommandController/deleteByQuery',
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_io__pb2.ApiResourceSearchQueryInput.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def indexApiDocs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/cloud.planton.apis.search.v1.apiresource.ApiResourceSearchCommandController/indexApiDocs',
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_api__docs__pb2.IndexApiDocsRequest.SerializeToString,
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_api__docs__pb2.IndexApiDocsProgressResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def reindex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.search.v1.apiresource.ApiResourceSearchCommandController/reindex',
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_reindex__pb2.SearchReindexRequest.SerializeToString,
            cloud_dot_planton_dot_apis_dot_search_dot_v1_dot_apiresource_dot_reindex__pb2.SearchReindexResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
