# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cloud.planton.apis.commons.rpc import pagination_pb2 as cloud_dot_planton_dot_apis_dot_commons_dot_rpc_dot_pagination__pb2
from cloud.planton.apis.copilot.copilotchat.chat.v1 import api_pb2 as cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chat_dot_v1_dot_api__pb2
from cloud.planton.apis.copilot.copilotchat.chat.v1 import io_pb2 as cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chat_dot_v1_dot_io__pb2


class ChatQueryControllerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get = channel.unary_unary(
                '/cloud.planton.apis.copilot.copilotchat.chat.v1.ChatQueryController/get',
                request_serializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chat_dot_v1_dot_io__pb2.ChatId.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chat_dot_v1_dot_api__pb2.Chat.FromString,
                _registered_method=True)
        self.list = channel.unary_unary(
                '/cloud.planton.apis.copilot.copilotchat.chat.v1.ChatQueryController/list',
                request_serializer=cloud_dot_planton_dot_apis_dot_commons_dot_rpc_dot_pagination__pb2.PageInfo.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chat_dot_v1_dot_io__pb2.ChatList.FromString,
                _registered_method=True)
        self.listShared = channel.unary_unary(
                '/cloud.planton.apis.copilot.copilotchat.chat.v1.ChatQueryController/listShared',
                request_serializer=cloud_dot_planton_dot_apis_dot_commons_dot_rpc_dot_pagination__pb2.PageInfo.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chat_dot_v1_dot_io__pb2.ChatList.FromString,
                _registered_method=True)


class ChatQueryControllerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def get(self, request, context):
        """look up a chat using id
        since the chat-id in the input can be either an api-resource chat or identity-account's chat,
        the authorization is performed accordingly.
        for identity-account's chat, the requester should have get permission on the chat itself.
        for api-resource's chat, the requester should have get permission on the api-resource present in the chat's state.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def list(self, request, context):
        """get list of chats for the requested user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listShared(self, request, context):
        """get list of shared chats for the requested user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatQueryControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chat_dot_v1_dot_io__pb2.ChatId.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chat_dot_v1_dot_api__pb2.Chat.SerializeToString,
            ),
            'list': grpc.unary_unary_rpc_method_handler(
                    servicer.list,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_commons_dot_rpc_dot_pagination__pb2.PageInfo.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chat_dot_v1_dot_io__pb2.ChatList.SerializeToString,
            ),
            'listShared': grpc.unary_unary_rpc_method_handler(
                    servicer.listShared,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_commons_dot_rpc_dot_pagination__pb2.PageInfo.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chat_dot_v1_dot_io__pb2.ChatList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.copilot.copilotchat.chat.v1.ChatQueryController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.copilot.copilotchat.chat.v1.ChatQueryController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ChatQueryController(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.copilot.copilotchat.chat.v1.ChatQueryController/get',
            cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chat_dot_v1_dot_io__pb2.ChatId.SerializeToString,
            cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chat_dot_v1_dot_api__pb2.Chat.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.copilot.copilotchat.chat.v1.ChatQueryController/list',
            cloud_dot_planton_dot_apis_dot_commons_dot_rpc_dot_pagination__pb2.PageInfo.SerializeToString,
            cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chat_dot_v1_dot_io__pb2.ChatList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def listShared(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.copilot.copilotchat.chat.v1.ChatQueryController/listShared',
            cloud_dot_planton_dot_apis_dot_commons_dot_rpc_dot_pagination__pb2.PageInfo.SerializeToString,
            cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chat_dot_v1_dot_io__pb2.ChatList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
