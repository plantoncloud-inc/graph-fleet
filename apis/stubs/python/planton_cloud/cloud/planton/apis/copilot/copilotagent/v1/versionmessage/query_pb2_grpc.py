# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cloud.planton.apis.copilot.copilotagent.v1.versionmessage import io_pb2 as cloud_dot_planton_dot_apis_dot_copilot_dot_copilotagent_dot_v1_dot_versionmessage_dot_io__pb2


class VersionMessageQueryControllerStub(object):
    """-----------------------------------------------------------------------------
    VersionMessageQueryController
    -----------------------------------------------------------------------------
    A read‑only controller that asks the Copilot LLM to draft a
    git‑style version message summarising a CRUD operation on an ApiResource.

    - The caller sends one DraftVersionMessageRequest.
    - The service returns one DraftVersionMessageResponse containing the
    commit line.  (If progress events are ever needed they can be exposed
    via a separate API.)

    No state is persisted; callers decide whether or where to store the result.

    PERFORMANCE
    - Typical total latency: 150‑500 ms.
    - Designed for UI buttons ("Generate commit message") so speed matters.

    SECURITY
    - Do not echo sensitive values (for example secrets) inside the message.
    - Servers should perform redaction before feeding prompts to the LLM.

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.draft = channel.unary_unary(
                '/cloud.planton.apis.copilot.copilotagent.v1.versionmessage.VersionMessageQueryController/draft',
                request_serializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotagent_dot_v1_dot_versionmessage_dot_io__pb2.DraftVersionMessageRequest.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotagent_dot_v1_dot_versionmessage_dot_io__pb2.DraftVersionMessageResponse.FromString,
                _registered_method=True)


class VersionMessageQueryControllerServicer(object):
    """-----------------------------------------------------------------------------
    VersionMessageQueryController
    -----------------------------------------------------------------------------
    A read‑only controller that asks the Copilot LLM to draft a
    git‑style version message summarising a CRUD operation on an ApiResource.

    - The caller sends one DraftVersionMessageRequest.
    - The service returns one DraftVersionMessageResponse containing the
    commit line.  (If progress events are ever needed they can be exposed
    via a separate API.)

    No state is persisted; callers decide whether or where to store the result.

    PERFORMANCE
    - Typical total latency: 150‑500 ms.
    - Designed for UI buttons ("Generate commit message") so speed matters.

    SECURITY
    - Do not echo sensitive values (for example secrets) inside the message.
    - Servers should perform redaction before feeding prompts to the LLM.

    """

    def draft(self, request, context):
        """---------------------------------------------------------------------------
        draft
        ---------------------------------------------------------------------------
        PURPOSE
        Generate a concise version/commit message for the supplied manifest.

        REQUEST  (DraftVersionMessageRequest)
        - api_resource_kind : resource type being changed.
        - manifest          : complete or partial manifest representing the new
        desired state (create/update/delete scenarios).

        RESPONSE (DraftVersionMessageResponse)
        - version_message   : commit summary line.

        ---------------------------------------------------------------------------
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VersionMessageQueryControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'draft': grpc.unary_unary_rpc_method_handler(
                    servicer.draft,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotagent_dot_v1_dot_versionmessage_dot_io__pb2.DraftVersionMessageRequest.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotagent_dot_v1_dot_versionmessage_dot_io__pb2.DraftVersionMessageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.copilot.copilotagent.v1.versionmessage.VersionMessageQueryController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.copilot.copilotagent.v1.versionmessage.VersionMessageQueryController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class VersionMessageQueryController(object):
    """-----------------------------------------------------------------------------
    VersionMessageQueryController
    -----------------------------------------------------------------------------
    A read‑only controller that asks the Copilot LLM to draft a
    git‑style version message summarising a CRUD operation on an ApiResource.

    - The caller sends one DraftVersionMessageRequest.
    - The service returns one DraftVersionMessageResponse containing the
    commit line.  (If progress events are ever needed they can be exposed
    via a separate API.)

    No state is persisted; callers decide whether or where to store the result.

    PERFORMANCE
    - Typical total latency: 150‑500 ms.
    - Designed for UI buttons ("Generate commit message") so speed matters.

    SECURITY
    - Do not echo sensitive values (for example secrets) inside the message.
    - Servers should perform redaction before feeding prompts to the LLM.

    """

    @staticmethod
    def draft(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.copilot.copilotagent.v1.versionmessage.VersionMessageQueryController/draft',
            cloud_dot_planton_dot_apis_dot_copilot_dot_copilotagent_dot_v1_dot_versionmessage_dot_io__pb2.DraftVersionMessageRequest.SerializeToString,
            cloud_dot_planton_dot_apis_dot_copilot_dot_copilotagent_dot_v1_dot_versionmessage_dot_io__pb2.DraftVersionMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
