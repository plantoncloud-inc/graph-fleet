# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cloud.planton.apis.copilot.copilotagent.v1 import io_pb2 as cloud_dot_planton_dot_apis_dot_copilot_dot_copilotagent_dot_v1_dot_io__pb2
from cloud.planton.apis.copilot.copilotchat.chatmessage.v1 import api_pb2 as cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class CopilotAgentCommandControllerStub(object):
    """copilot-agent command controller
    === Ops‑mode RPCs =======================================================
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.chat = channel.stream_stream(
                '/cloud.planton.apis.copilot.copilotagent.v1.CopilotAgentCommandController/chat',
                request_serializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2.ChatMessage.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2.ChatMessage.FromString,
                _registered_method=True)
        self.sendMessage = channel.unary_unary(
                '/cloud.planton.apis.copilot.copilotagent.v1.CopilotAgentCommandController/sendMessage',
                request_serializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2.ChatMessage.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.loadSpecVector = channel.unary_unary(
                '/cloud.planton.apis.copilot.copilotagent.v1.CopilotAgentCommandController/loadSpecVector',
                request_serializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotagent_dot_v1_dot_io__pb2.LoadSpecVectorInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotagent_dot_v1_dot_io__pb2.LoadSpecVectorInput.FromString,
                _registered_method=True)
        self.devChat = channel.stream_stream(
                '/cloud.planton.apis.copilot.copilotagent.v1.CopilotAgentCommandController/devChat',
                request_serializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2.ChatMessage.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2.ChatMessage.FromString,
                _registered_method=True)
        self.devSendMessage = channel.unary_unary(
                '/cloud.planton.apis.copilot.copilotagent.v1.CopilotAgentCommandController/devSendMessage',
                request_serializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2.ChatMessage.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class CopilotAgentCommandControllerServicer(object):
    """copilot-agent command controller
    === Ops‑mode RPCs =======================================================
    """

    def chat(self, request_iterator, context):
        """rpc to start chat stream with the nlu service
        the incoming messages can belong to different chats.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendMessage(self, request, context):
        """rpc to send a new message to nlu.
        nlu service would simply acknowledge receipt with empty response.
        nlu service would then generate response and write it to redis stream for clients consumption and persistence.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def loadSpecVector(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def devChat(self, request_iterator, context):
        """=== Developer‑mode RPCs =================================================

        rpc to start chat stream with the nlu service in developer mode
        intended for internal developers performing platform‑level tasks.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def devSendMessage(self, request, context):
        """rpc to send a developer‑mode message to nlu.
        behaves like sendMessage but is scoped to developer workflows (e.g., adding new cloud resources).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CopilotAgentCommandControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'chat': grpc.stream_stream_rpc_method_handler(
                    servicer.chat,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2.ChatMessage.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2.ChatMessage.SerializeToString,
            ),
            'sendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.sendMessage,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2.ChatMessage.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'loadSpecVector': grpc.unary_unary_rpc_method_handler(
                    servicer.loadSpecVector,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotagent_dot_v1_dot_io__pb2.LoadSpecVectorInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotagent_dot_v1_dot_io__pb2.LoadSpecVectorInput.SerializeToString,
            ),
            'devChat': grpc.stream_stream_rpc_method_handler(
                    servicer.devChat,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2.ChatMessage.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2.ChatMessage.SerializeToString,
            ),
            'devSendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.devSendMessage,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2.ChatMessage.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.copilot.copilotagent.v1.CopilotAgentCommandController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.copilot.copilotagent.v1.CopilotAgentCommandController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CopilotAgentCommandController(object):
    """copilot-agent command controller
    === Ops‑mode RPCs =======================================================
    """

    @staticmethod
    def chat(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/cloud.planton.apis.copilot.copilotagent.v1.CopilotAgentCommandController/chat',
            cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2.ChatMessage.SerializeToString,
            cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2.ChatMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def sendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.copilot.copilotagent.v1.CopilotAgentCommandController/sendMessage',
            cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2.ChatMessage.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def loadSpecVector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.copilot.copilotagent.v1.CopilotAgentCommandController/loadSpecVector',
            cloud_dot_planton_dot_apis_dot_copilot_dot_copilotagent_dot_v1_dot_io__pb2.LoadSpecVectorInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_copilot_dot_copilotagent_dot_v1_dot_io__pb2.LoadSpecVectorInput.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def devChat(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/cloud.planton.apis.copilot.copilotagent.v1.CopilotAgentCommandController/devChat',
            cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2.ChatMessage.SerializeToString,
            cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2.ChatMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def devSendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.copilot.copilotagent.v1.CopilotAgentCommandController/devSendMessage',
            cloud_dot_planton_dot_apis_dot_copilot_dot_copilotchat_dot_chatmessage_dot_v1_dot_api__pb2.ChatMessage.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
