# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cloud.planton.apis.iam.team.v1 import api_pb2 as cloud_dot_planton_dot_apis_dot_iam_dot_team_dot_v1_dot_api__pb2
from cloud.planton.apis.iam.team.v1 import io_pb2 as cloud_dot_planton_dot_apis_dot_iam_dot_team_dot_v1_dot_io__pb2


class TeamQueryControllerStub(object):
    """team query controller
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get = channel.unary_unary(
                '/cloud.planton.apis.iam.team.v1.TeamQueryController/get',
                request_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_team_dot_v1_dot_io__pb2.TeamId.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_team_dot_v1_dot_api__pb2.Team.FromString,
                _registered_method=True)


class TeamQueryControllerServicer(object):
    """team query controller
    """

    def get(self, request, context):
        """lookup machine account by identity account id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TeamQueryControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_team_dot_v1_dot_io__pb2.TeamId.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_team_dot_v1_dot_api__pb2.Team.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.iam.team.v1.TeamQueryController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.iam.team.v1.TeamQueryController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TeamQueryController(object):
    """team query controller
    """

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.iam.team.v1.TeamQueryController/get',
            cloud_dot_planton_dot_apis_dot_iam_dot_team_dot_v1_dot_io__pb2.TeamId.SerializeToString,
            cloud_dot_planton_dot_apis_dot_iam_dot_team_dot_v1_dot_api__pb2.Team.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
