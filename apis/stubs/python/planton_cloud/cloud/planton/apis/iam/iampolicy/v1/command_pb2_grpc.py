# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cloud.planton.apis.commons.apiresource import io_pb2 as cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2
from cloud.planton.apis.iam.iampolicy.v1 import api_pb2 as cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_api__pb2
from cloud.planton.apis.iam.iampolicy.v1 import io_pb2 as cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class IamPolicyCommandControllerStub(object):
    """iam policy command controller
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.add = channel.unary_unary(
                '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/add',
                request_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.AddIamPolicyInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.IamPoliciesByPrincipal.FromString,
                _registered_method=True)
        self.removeMultiple = channel.unary_unary(
                '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/removeMultiple',
                request_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.RemoveIamPoliciesInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.IamPoliciesByPrincipal.FromString,
                _registered_method=True)
        self.update = channel.unary_unary(
                '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/update',
                request_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.UpdateIamPolicyInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.IamPolicyByPrincipal.FromString,
                _registered_method=True)
        self.addEnvironment = channel.unary_unary(
                '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/addEnvironment',
                request_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.AddIamPolicyInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.IamPoliciesByPrincipal.FromString,
                _registered_method=True)
        self.removeEnvironmentMultiple = channel.unary_unary(
                '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/removeEnvironmentMultiple',
                request_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.RemoveIamPoliciesInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.IamPoliciesByPrincipal.FromString,
                _registered_method=True)
        self.addApiResourceOwner = channel.unary_unary(
                '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/addApiResourceOwner',
                request_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_api__pb2.FgaTuple.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_api__pb2.FgaTuple.FromString,
                _registered_method=True)
        self.addApiResourcePlatformMember = channel.unary_unary(
                '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/addApiResourcePlatformMember',
                request_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_api__pb2.FgaTuple.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_api__pb2.FgaTuple.FromString,
                _registered_method=True)
        self.revokeAccessOnOrg = channel.unary_unary(
                '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/revokeAccessOnOrg',
                request_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.RevokeMemberAccessOnOrgInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.MemberWithRolesList.FromString,
                _registered_method=True)
        self.inviteMember = channel.unary_unary(
                '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/inviteMember',
                request_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.AddIamPolicyInput.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.removeAllForResource = channel.unary_unary(
                '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/removeAllForResource',
                request_serializer=cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2.ApiResourceId.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class IamPolicyCommandControllerServicer(object):
    """iam policy command controller
    """

    def add(self, request, context):
        """add iam policies to a resource
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def removeMultiple(self, request, context):
        """remove list of iam policies of a principal and resource
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addEnvironment(self, request, context):
        """add iam policies to a resource
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def removeEnvironmentMultiple(self, request, context):
        """remove list of iam policies of a principal and resource
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addApiResourceOwner(self, request, context):
        """add an owner for a resource.
        this rpc is used by planton-cloud platform services when ever a new api resource is newly created.
        a tuple is created on fga and the same tuple along with any contextual
        information is stored in planton-cloud's database.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addApiResourcePlatformMember(self, request, context):
        """add a platform member tuple for a resource.
        this rpc is used by planton-cloud platform services to establish the platform relationship
        between planton-cloud platform and an api resource (typically organizations).
        creates a tuple with user=platform:planton_cloud, relation=platform, object=resource
        the tuple is created on fga and stored in planton-cloud's database.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def revokeAccessOnOrg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def inviteMember(self, request, context):
        """rpc to invite a member to collaborate on a resource
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def removeAllForResource(self, request, context):
        """remove every IAM tuple (both inbound and outbound) that references the given
        resource. typically invoked by platform services immediately after the
        resource itself has been deleted to ensure no dangling permissions remain.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IamPolicyCommandControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'add': grpc.unary_unary_rpc_method_handler(
                    servicer.add,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.AddIamPolicyInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.IamPoliciesByPrincipal.SerializeToString,
            ),
            'removeMultiple': grpc.unary_unary_rpc_method_handler(
                    servicer.removeMultiple,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.RemoveIamPoliciesInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.IamPoliciesByPrincipal.SerializeToString,
            ),
            'update': grpc.unary_unary_rpc_method_handler(
                    servicer.update,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.UpdateIamPolicyInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.IamPolicyByPrincipal.SerializeToString,
            ),
            'addEnvironment': grpc.unary_unary_rpc_method_handler(
                    servicer.addEnvironment,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.AddIamPolicyInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.IamPoliciesByPrincipal.SerializeToString,
            ),
            'removeEnvironmentMultiple': grpc.unary_unary_rpc_method_handler(
                    servicer.removeEnvironmentMultiple,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.RemoveIamPoliciesInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.IamPoliciesByPrincipal.SerializeToString,
            ),
            'addApiResourceOwner': grpc.unary_unary_rpc_method_handler(
                    servicer.addApiResourceOwner,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_api__pb2.FgaTuple.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_api__pb2.FgaTuple.SerializeToString,
            ),
            'addApiResourcePlatformMember': grpc.unary_unary_rpc_method_handler(
                    servicer.addApiResourcePlatformMember,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_api__pb2.FgaTuple.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_api__pb2.FgaTuple.SerializeToString,
            ),
            'revokeAccessOnOrg': grpc.unary_unary_rpc_method_handler(
                    servicer.revokeAccessOnOrg,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.RevokeMemberAccessOnOrgInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.MemberWithRolesList.SerializeToString,
            ),
            'inviteMember': grpc.unary_unary_rpc_method_handler(
                    servicer.inviteMember,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.AddIamPolicyInput.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'removeAllForResource': grpc.unary_unary_rpc_method_handler(
                    servicer.removeAllForResource,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2.ApiResourceId.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class IamPolicyCommandController(object):
    """iam policy command controller
    """

    @staticmethod
    def add(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/add',
            cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.AddIamPolicyInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.IamPoliciesByPrincipal.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def removeMultiple(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/removeMultiple',
            cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.RemoveIamPoliciesInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.IamPoliciesByPrincipal.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/update',
            cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.UpdateIamPolicyInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.IamPolicyByPrincipal.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def addEnvironment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/addEnvironment',
            cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.AddIamPolicyInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.IamPoliciesByPrincipal.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def removeEnvironmentMultiple(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/removeEnvironmentMultiple',
            cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.RemoveIamPoliciesInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.IamPoliciesByPrincipal.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def addApiResourceOwner(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/addApiResourceOwner',
            cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_api__pb2.FgaTuple.SerializeToString,
            cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_api__pb2.FgaTuple.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def addApiResourcePlatformMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/addApiResourcePlatformMember',
            cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_api__pb2.FgaTuple.SerializeToString,
            cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_api__pb2.FgaTuple.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def revokeAccessOnOrg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/revokeAccessOnOrg',
            cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.RevokeMemberAccessOnOrgInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.MemberWithRolesList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def inviteMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/inviteMember',
            cloud_dot_planton_dot_apis_dot_iam_dot_iampolicy_dot_v1_dot_io__pb2.AddIamPolicyInput.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def removeAllForResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.iam.iampolicy.v1.IamPolicyCommandController/removeAllForResource',
            cloud_dot_planton_dot_apis_dot_commons_dot_apiresource_dot_io__pb2.ApiResourceId.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
