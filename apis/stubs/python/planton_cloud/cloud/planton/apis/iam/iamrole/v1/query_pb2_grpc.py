# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cloud.planton.apis.commons.rpc import pagination_pb2 as cloud_dot_planton_dot_apis_dot_commons_dot_rpc_dot_pagination__pb2
from cloud.planton.apis.iam.iamrole.v1 import api_pb2 as cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_api__pb2
from cloud.planton.apis.iam.iamrole.v1 import io_pb2 as cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2


class IamRoleQueryControllerStub(object):
    """iam role query controller
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.list = channel.unary_unary(
                '/cloud.planton.apis.iam.iamrole.v1.IamRoleQueryController/list',
                request_serializer=cloud_dot_planton_dot_apis_dot_commons_dot_rpc_dot_pagination__pb2.PageInfo.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2.IamRoleList.FromString,
                _registered_method=True)
        self.get = channel.unary_unary(
                '/cloud.planton.apis.iam.iamrole.v1.IamRoleQueryController/get',
                request_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2.IamRoleId.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_api__pb2.IamRole.FromString,
                _registered_method=True)
        self.findByApiResourceKindAndPrincipalType = channel.unary_unary(
                '/cloud.planton.apis.iam.iamrole.v1.IamRoleQueryController/findByApiResourceKindAndPrincipalType',
                request_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2.ApiResourceKindAndPrincipalTypeInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2.IamRoles.FromString,
                _registered_method=True)
        self.getIamPrincipalTypesByApiResourceKind = channel.unary_unary(
                '/cloud.planton.apis.iam.iamrole.v1.IamRoleQueryController/getIamPrincipalTypesByApiResourceKind',
                request_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2.IamApiResourceKindInput.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2.PrincipalTypes.FromString,
                _registered_method=True)


class IamRoleQueryControllerServicer(object):
    """iam role query controller
    """

    def list(self, request, context):
        """retrieve paginated list of all iam roles on planton-cloud.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
        """lookup iam role by role id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findByApiResourceKindAndPrincipalType(self, request, context):
        """lookup iam role by resource type and principal type
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getIamPrincipalTypesByApiResourceKind(self, request, context):
        """lookup iam principal type by resource type
        returns the list of principal types that can be used to create relations with the resource
        for example credential is allowed to share at organization and user level
        by this credential have two principal types to create relations with
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IamRoleQueryControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'list': grpc.unary_unary_rpc_method_handler(
                    servicer.list,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_commons_dot_rpc_dot_pagination__pb2.PageInfo.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2.IamRoleList.SerializeToString,
            ),
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2.IamRoleId.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_api__pb2.IamRole.SerializeToString,
            ),
            'findByApiResourceKindAndPrincipalType': grpc.unary_unary_rpc_method_handler(
                    servicer.findByApiResourceKindAndPrincipalType,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2.ApiResourceKindAndPrincipalTypeInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2.IamRoles.SerializeToString,
            ),
            'getIamPrincipalTypesByApiResourceKind': grpc.unary_unary_rpc_method_handler(
                    servicer.getIamPrincipalTypesByApiResourceKind,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2.IamApiResourceKindInput.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2.PrincipalTypes.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.iam.iamrole.v1.IamRoleQueryController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.iam.iamrole.v1.IamRoleQueryController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class IamRoleQueryController(object):
    """iam role query controller
    """

    @staticmethod
    def list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.iam.iamrole.v1.IamRoleQueryController/list',
            cloud_dot_planton_dot_apis_dot_commons_dot_rpc_dot_pagination__pb2.PageInfo.SerializeToString,
            cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2.IamRoleList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.iam.iamrole.v1.IamRoleQueryController/get',
            cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2.IamRoleId.SerializeToString,
            cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_api__pb2.IamRole.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def findByApiResourceKindAndPrincipalType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.iam.iamrole.v1.IamRoleQueryController/findByApiResourceKindAndPrincipalType',
            cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2.ApiResourceKindAndPrincipalTypeInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2.IamRoles.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getIamPrincipalTypesByApiResourceKind(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.iam.iamrole.v1.IamRoleQueryController/getIamPrincipalTypesByApiResourceKind',
            cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2.IamApiResourceKindInput.SerializeToString,
            cloud_dot_planton_dot_apis_dot_iam_dot_iamrole_dot_v1_dot_io__pb2.PrincipalTypes.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
