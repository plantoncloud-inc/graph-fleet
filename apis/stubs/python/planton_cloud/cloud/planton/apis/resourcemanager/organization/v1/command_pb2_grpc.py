# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cloud.planton.apis.resourcemanager.organization.v1 import api_pb2 as cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2
from cloud.planton.apis.resourcemanager.organization.v1 import io_pb2 as cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_io__pb2


class OrganizationCommandControllerStub(object):
    """organization command controller
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.apply = channel.unary_unary(
                '/cloud.planton.apis.resourcemanager.organization.v1.OrganizationCommandController/apply',
                request_serializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.FromString,
                _registered_method=True)
        self.create = channel.unary_unary(
                '/cloud.planton.apis.resourcemanager.organization.v1.OrganizationCommandController/create',
                request_serializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.FromString,
                _registered_method=True)
        self.update = channel.unary_unary(
                '/cloud.planton.apis.resourcemanager.organization.v1.OrganizationCommandController/update',
                request_serializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.FromString,
                _registered_method=True)
        self.delete = channel.unary_unary(
                '/cloud.planton.apis.resourcemanager.organization.v1.OrganizationCommandController/delete',
                request_serializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_io__pb2.OrganizationId.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.FromString,
                _registered_method=True)
        self.repairFgaTuples = channel.unary_unary(
                '/cloud.planton.apis.resourcemanager.organization.v1.OrganizationCommandController/repairFgaTuples',
                request_serializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_io__pb2.OrganizationId.SerializeToString,
                response_deserializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.FromString,
                _registered_method=True)


class OrganizationCommandControllerServicer(object):
    """organization command controller
    """

    def apply(self, request, context):
        """create/update an organization resource
        the authorization and state-operation are determined depending on whether the organization
        is going to be created or updated which is determined as part of the request execution.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def create(self, request, context):
        """create a new organization on planton-cloud
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
        """update an existing organization on planton-cloud
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
        """delete an existing organization on planton-cloud using organization id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def repairFgaTuples(self, request, context):
        """repair FGA tuples for an organization by recreating the owner tuple and republishing state to trigger platform tuple creation
        this is useful when tuple creation fails during organization creation and needs to be fixed manually
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrganizationCommandControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'apply': grpc.unary_unary_rpc_method_handler(
                    servicer.apply,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.SerializeToString,
            ),
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.SerializeToString,
            ),
            'update': grpc.unary_unary_rpc_method_handler(
                    servicer.update,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.SerializeToString,
            ),
            'delete': grpc.unary_unary_rpc_method_handler(
                    servicer.delete,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_io__pb2.OrganizationId.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.SerializeToString,
            ),
            'repairFgaTuples': grpc.unary_unary_rpc_method_handler(
                    servicer.repairFgaTuples,
                    request_deserializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_io__pb2.OrganizationId.FromString,
                    response_serializer=cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.planton.apis.resourcemanager.organization.v1.OrganizationCommandController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.planton.apis.resourcemanager.organization.v1.OrganizationCommandController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class OrganizationCommandController(object):
    """organization command controller
    """

    @staticmethod
    def apply(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.resourcemanager.organization.v1.OrganizationCommandController/apply',
            cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.SerializeToString,
            cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.resourcemanager.organization.v1.OrganizationCommandController/create',
            cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.SerializeToString,
            cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.resourcemanager.organization.v1.OrganizationCommandController/update',
            cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.SerializeToString,
            cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.resourcemanager.organization.v1.OrganizationCommandController/delete',
            cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_io__pb2.OrganizationId.SerializeToString,
            cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def repairFgaTuples(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.planton.apis.resourcemanager.organization.v1.OrganizationCommandController/repairFgaTuples',
            cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_io__pb2.OrganizationId.SerializeToString,
            cloud_dot_planton_dot_apis_dot_resourcemanager_dot_organization_dot_v1_dot_api__pb2.Organization.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
