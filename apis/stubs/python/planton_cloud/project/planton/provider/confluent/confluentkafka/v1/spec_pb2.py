# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: project/planton/provider/confluent/confluentkafka/v1/spec.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'project/planton/provider/confluent/confluentkafka/v1/spec.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n?project/planton/provider/confluent/confluentkafka/v1/spec.proto\x12\x34project.planton.provider.confluent.confluentkafka.v1\x1a\x1b\x62uf/validate/validate.proto\"\xb9\x01\n\x12\x43onfluentKafkaSpec\x12/\n\x05\x63loud\x18\x01 \x01(\tB\x19\xbaH\x16r\x11R\x03\x41WSR\x05\x41ZURER\x03GCP\xd8\x01\x01R\x05\x63loud\x12P\n\x0c\x61vailability\x18\x02 \x01(\tB,\xbaH)r$R\x0bSINGLE_ZONER\nMULTI_ZONER\x03LOWR\x04HIGH\xd8\x01\x01R\x0c\x61vailability\x12 \n\x0b\x65nvironment\x18\x03 \x01(\tR\x0b\x65nvironmentB\xbc\x02\n8com.project.planton.provider.confluent.confluentkafka.v1B\tSpecProtoP\x01\xa2\x02\x05PPPCC\xaa\x02\x34Project.Planton.Provider.Confluent.Confluentkafka.V1\xca\x02\x34Project\\Planton\\Provider\\Confluent\\Confluentkafka\\V1\xe2\x02@Project\\Planton\\Provider\\Confluent\\Confluentkafka\\V1\\GPBMetadata\xea\x02\x39Project::Planton::Provider::Confluent::Confluentkafka::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'project.planton.provider.confluent.confluentkafka.v1.spec_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n8com.project.planton.provider.confluent.confluentkafka.v1B\tSpecProtoP\001\242\002\005PPPCC\252\0024Project.Planton.Provider.Confluent.Confluentkafka.V1\312\0024Project\\Planton\\Provider\\Confluent\\Confluentkafka\\V1\342\002@Project\\Planton\\Provider\\Confluent\\Confluentkafka\\V1\\GPBMetadata\352\0029Project::Planton::Provider::Confluent::Confluentkafka::V1'
  _globals['_CONFLUENTKAFKASPEC'].fields_by_name['cloud']._loaded_options = None
  _globals['_CONFLUENTKAFKASPEC'].fields_by_name['cloud']._serialized_options = b'\272H\026r\021R\003AWSR\005AZURER\003GCP\330\001\001'
  _globals['_CONFLUENTKAFKASPEC'].fields_by_name['availability']._loaded_options = None
  _globals['_CONFLUENTKAFKASPEC'].fields_by_name['availability']._serialized_options = b'\272H)r$R\013SINGLE_ZONER\nMULTI_ZONER\003LOWR\004HIGH\330\001\001'
  _globals['_CONFLUENTKAFKASPEC']._serialized_start=151
  _globals['_CONFLUENTKAFKASPEC']._serialized_end=336
# @@protoc_insertion_point(module_scope)
