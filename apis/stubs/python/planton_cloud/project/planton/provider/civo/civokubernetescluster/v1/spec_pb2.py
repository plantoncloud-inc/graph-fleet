# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: project/planton/provider/civo/civokubernetescluster/v1/spec.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'project/planton/provider/civo/civokubernetescluster/v1/spec.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2
from project.planton.provider.civo import region_pb2 as project_dot_planton_dot_provider_dot_civo_dot_region__pb2
from project.planton.shared.foreignkey.v1 import foreign_key_pb2 as project_dot_planton_dot_shared_dot_foreignkey_dot_v1_dot_foreign__key__pb2
from project.planton.shared.options import options_pb2 as project_dot_planton_dot_shared_dot_options_dot_options__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nAproject/planton/provider/civo/civokubernetescluster/v1/spec.proto\x12\x36project.planton.provider.civo.civokubernetescluster.v1\x1a\x1b\x62uf/validate/validate.proto\x1a*project/planton/provider/civo/region.proto\x1a\x36project/planton/shared/foreignkey/v1/foreign_key.proto\x1a,project/planton/shared/options/options.proto\"\xf8\x04\n\x19\x43ivoKubernetesClusterSpec\x12)\n\x0c\x63luster_name\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x0b\x63lusterName\x12I\n\x06region\x18\x02 \x01(\x0e\x32).project.planton.provider.civo.CivoRegionB\x06\xbaH\x03\xc8\x01\x01R\x06region\x12\x35\n\x12kubernetes_version\x18\x03 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x11kubernetesVersion\x12z\n\x07network\x18\x04 \x01(\x0b\x32\x36.project.planton.shared.foreignkey.v1.StringValueOrRefB(\xbaH\x03\xc8\x01\x01\x88\xd4\x61\xe7\x0b\x92\xd4\x61\x19status.outputs.network_idR\x07network\x12\x34\n\x10highly_available\x18\x05 \x01(\x08\x42\t\x92\xa6\x1d\x05\x66\x61lseR\x0fhighlyAvailable\x12!\n\x0c\x61uto_upgrade\x18\x06 \x01(\x08R\x0b\x61utoUpgrade\x12\x32\n\x15\x64isable_surge_upgrade\x18\x07 \x01(\x08R\x13\x64isableSurgeUpgrade\x12\x12\n\x04tags\x18\x08 \x03(\tR\x04tags\x12\x90\x01\n\x11\x64\x65\x66\x61ult_node_pool\x18\t \x01(\x0b\x32\\.project.planton.provider.civo.civokubernetescluster.v1.CivoKubernetesClusterDefaultNodePoolB\x06\xbaH\x03\xc8\x01\x01R\x0f\x64\x65\x66\x61ultNodePool\"m\n$CivoKubernetesClusterDefaultNodePool\x12\x1a\n\x04size\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x04size\x12)\n\nnode_count\x18\x02 \x01(\rB\n\xbaH\x07*\x02 \x00\xc8\x01\x01R\tnodeCountB\xc6\x02\n:com.project.planton.provider.civo.civokubernetescluster.v1B\tSpecProtoP\x01\xa2\x02\x05PPPCC\xaa\x02\x36Project.Planton.Provider.Civo.Civokubernetescluster.V1\xca\x02\x36Project\\Planton\\Provider\\Civo\\Civokubernetescluster\\V1\xe2\x02\x42Project\\Planton\\Provider\\Civo\\Civokubernetescluster\\V1\\GPBMetadata\xea\x02;Project::Planton::Provider::Civo::Civokubernetescluster::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'project.planton.provider.civo.civokubernetescluster.v1.spec_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n:com.project.planton.provider.civo.civokubernetescluster.v1B\tSpecProtoP\001\242\002\005PPPCC\252\0026Project.Planton.Provider.Civo.Civokubernetescluster.V1\312\0026Project\\Planton\\Provider\\Civo\\Civokubernetescluster\\V1\342\002BProject\\Planton\\Provider\\Civo\\Civokubernetescluster\\V1\\GPBMetadata\352\002;Project::Planton::Provider::Civo::Civokubernetescluster::V1'
  _globals['_CIVOKUBERNETESCLUSTERSPEC'].fields_by_name['cluster_name']._loaded_options = None
  _globals['_CIVOKUBERNETESCLUSTERSPEC'].fields_by_name['cluster_name']._serialized_options = b'\272H\003\310\001\001'
  _globals['_CIVOKUBERNETESCLUSTERSPEC'].fields_by_name['region']._loaded_options = None
  _globals['_CIVOKUBERNETESCLUSTERSPEC'].fields_by_name['region']._serialized_options = b'\272H\003\310\001\001'
  _globals['_CIVOKUBERNETESCLUSTERSPEC'].fields_by_name['kubernetes_version']._loaded_options = None
  _globals['_CIVOKUBERNETESCLUSTERSPEC'].fields_by_name['kubernetes_version']._serialized_options = b'\272H\003\310\001\001'
  _globals['_CIVOKUBERNETESCLUSTERSPEC'].fields_by_name['network']._loaded_options = None
  _globals['_CIVOKUBERNETESCLUSTERSPEC'].fields_by_name['network']._serialized_options = b'\272H\003\310\001\001\210\324a\347\013\222\324a\031status.outputs.network_id'
  _globals['_CIVOKUBERNETESCLUSTERSPEC'].fields_by_name['highly_available']._loaded_options = None
  _globals['_CIVOKUBERNETESCLUSTERSPEC'].fields_by_name['highly_available']._serialized_options = b'\222\246\035\005false'
  _globals['_CIVOKUBERNETESCLUSTERSPEC'].fields_by_name['default_node_pool']._loaded_options = None
  _globals['_CIVOKUBERNETESCLUSTERSPEC'].fields_by_name['default_node_pool']._serialized_options = b'\272H\003\310\001\001'
  _globals['_CIVOKUBERNETESCLUSTERDEFAULTNODEPOOL'].fields_by_name['size']._loaded_options = None
  _globals['_CIVOKUBERNETESCLUSTERDEFAULTNODEPOOL'].fields_by_name['size']._serialized_options = b'\272H\003\310\001\001'
  _globals['_CIVOKUBERNETESCLUSTERDEFAULTNODEPOOL'].fields_by_name['node_count']._loaded_options = None
  _globals['_CIVOKUBERNETESCLUSTERDEFAULTNODEPOOL'].fields_by_name['node_count']._serialized_options = b'\272H\007*\002 \000\310\001\001'
  _globals['_CIVOKUBERNETESCLUSTERSPEC']._serialized_start=301
  _globals['_CIVOKUBERNETESCLUSTERSPEC']._serialized_end=933
  _globals['_CIVOKUBERNETESCLUSTERDEFAULTNODEPOOL']._serialized_start=935
  _globals['_CIVOKUBERNETESCLUSTERDEFAULTNODEPOOL']._serialized_end=1044
# @@protoc_insertion_point(module_scope)
