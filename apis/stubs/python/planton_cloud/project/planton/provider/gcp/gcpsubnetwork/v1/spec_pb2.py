# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: project/planton/provider/gcp/gcpsubnetwork/v1/spec.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'project/planton/provider/gcp/gcpsubnetwork/v1/spec.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2
from project.planton.shared.foreignkey.v1 import foreign_key_pb2 as project_dot_planton_dot_shared_dot_foreignkey_dot_v1_dot_foreign__key__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n8project/planton/provider/gcp/gcpsubnetwork/v1/spec.proto\x12-project.planton.provider.gcp.gcpsubnetwork.v1\x1a\x1b\x62uf/validate/validate.proto\x1a\x36project/planton/shared/foreignkey/v1/foreign_key.proto\"\xdf\x04\n\x11GcpSubnetworkSpec\x12\x7f\n\nproject_id\x18\x01 \x01(\x0b\x32\x36.project.planton.shared.foreignkey.v1.StringValueOrRefB(\xbaH\x03\xc8\x01\x01\x88\xd4\x61\xe3\x04\x92\xd4\x61\x19status.outputs.project_idR\tprojectId\x12\x8b\x01\n\rvpc_self_link\x18\x02 \x01(\x0b\x32\x36.project.planton.shared.foreignkey.v1.StringValueOrRefB/\xbaH\x03\xc8\x01\x01\x88\xd4\x61\xe4\x04\x92\xd4\x61 status.outputs.network_self_linkR\x0bvpcSelfLink\x12>\n\x06region\x18\x03 \x01(\tB&\xbaH#r\x1e\x32\x1c^[a-z]([-a-z0-9]*[a-z0-9])?$\xc8\x01\x01R\x06region\x12\x46\n\rip_cidr_range\x18\x04 \x01(\tB\"\xbaH\x1fr\x1a\x32\x18^\\d+\\.\\d+\\.\\d+\\.\\d+/\\d+$\xc8\x01\x01R\x0bipCidrRange\x12z\n\x13secondary_ip_ranges\x18\x05 \x03(\x0b\x32J.project.planton.provider.gcp.gcpsubnetwork.v1.GcpSubnetworkSecondaryRangeR\x11secondaryIpRanges\x12\x37\n\x18private_ip_google_access\x18\x06 \x01(\x08R\x15privateIpGoogleAccess\"\xb0\x01\n\x1bGcpSubnetworkSecondaryRange\x12I\n\nrange_name\x18\x01 \x01(\tB*\xbaH\'r\"\x10\x01\x18?2\x1c^[a-z]([-a-z0-9]*[a-z0-9])?$\xc8\x01\x01R\trangeName\x12\x46\n\rip_cidr_range\x18\x02 \x01(\tB\"\xbaH\x1fr\x1a\x32\x18^\\d+\\.\\d+\\.\\d+\\.\\d+/\\d+$\xc8\x01\x01R\x0bipCidrRangeB\x99\x02\n1com.project.planton.provider.gcp.gcpsubnetwork.v1B\tSpecProtoP\x01\xa2\x02\x05PPPGG\xaa\x02-Project.Planton.Provider.Gcp.Gcpsubnetwork.V1\xca\x02-Project\\Planton\\Provider\\Gcp\\Gcpsubnetwork\\V1\xe2\x02\x39Project\\Planton\\Provider\\Gcp\\Gcpsubnetwork\\V1\\GPBMetadata\xea\x02\x32Project::Planton::Provider::Gcp::Gcpsubnetwork::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'project.planton.provider.gcp.gcpsubnetwork.v1.spec_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n1com.project.planton.provider.gcp.gcpsubnetwork.v1B\tSpecProtoP\001\242\002\005PPPGG\252\002-Project.Planton.Provider.Gcp.Gcpsubnetwork.V1\312\002-Project\\Planton\\Provider\\Gcp\\Gcpsubnetwork\\V1\342\0029Project\\Planton\\Provider\\Gcp\\Gcpsubnetwork\\V1\\GPBMetadata\352\0022Project::Planton::Provider::Gcp::Gcpsubnetwork::V1'
  _globals['_GCPSUBNETWORKSPEC'].fields_by_name['project_id']._loaded_options = None
  _globals['_GCPSUBNETWORKSPEC'].fields_by_name['project_id']._serialized_options = b'\272H\003\310\001\001\210\324a\343\004\222\324a\031status.outputs.project_id'
  _globals['_GCPSUBNETWORKSPEC'].fields_by_name['vpc_self_link']._loaded_options = None
  _globals['_GCPSUBNETWORKSPEC'].fields_by_name['vpc_self_link']._serialized_options = b'\272H\003\310\001\001\210\324a\344\004\222\324a status.outputs.network_self_link'
  _globals['_GCPSUBNETWORKSPEC'].fields_by_name['region']._loaded_options = None
  _globals['_GCPSUBNETWORKSPEC'].fields_by_name['region']._serialized_options = b'\272H#r\0362\034^[a-z]([-a-z0-9]*[a-z0-9])?$\310\001\001'
  _globals['_GCPSUBNETWORKSPEC'].fields_by_name['ip_cidr_range']._loaded_options = None
  _globals['_GCPSUBNETWORKSPEC'].fields_by_name['ip_cidr_range']._serialized_options = b'\272H\037r\0322\030^\\d+\\.\\d+\\.\\d+\\.\\d+/\\d+$\310\001\001'
  _globals['_GCPSUBNETWORKSECONDARYRANGE'].fields_by_name['range_name']._loaded_options = None
  _globals['_GCPSUBNETWORKSECONDARYRANGE'].fields_by_name['range_name']._serialized_options = b'\272H\'r\"\020\001\030?2\034^[a-z]([-a-z0-9]*[a-z0-9])?$\310\001\001'
  _globals['_GCPSUBNETWORKSECONDARYRANGE'].fields_by_name['ip_cidr_range']._loaded_options = None
  _globals['_GCPSUBNETWORKSECONDARYRANGE'].fields_by_name['ip_cidr_range']._serialized_options = b'\272H\037r\0322\030^\\d+\\.\\d+\\.\\d+\\.\\d+/\\d+$\310\001\001'
  _globals['_GCPSUBNETWORKSPEC']._serialized_start=193
  _globals['_GCPSUBNETWORKSPEC']._serialized_end=800
  _globals['_GCPSUBNETWORKSECONDARYRANGE']._serialized_start=803
  _globals['_GCPSUBNETWORKSECONDARYRANGE']._serialized_end=979
# @@protoc_insertion_point(module_scope)
