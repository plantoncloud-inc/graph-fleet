# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: project/planton/provider/aws/awslambda/v1/spec.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'project/planton/provider/aws/awslambda/v1/spec.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2
from project.planton.shared.foreignkey.v1 import foreign_key_pb2 as project_dot_planton_dot_shared_dot_foreignkey_dot_v1_dot_foreign__key__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n4project/planton/provider/aws/awslambda/v1/spec.proto\x12)project.planton.provider.aws.awslambda.v1\x1a\x1b\x62uf/validate/validate.proto\x1a\x36project/planton/shared/foreignkey/v1/foreign_key.proto\"\xb1\x12\n\rAwsLambdaSpec\x12,\n\rfunction_name\x18\x01 \x01(\tB\x07\xbaH\x04r\x02\x10\x01R\x0c\x66unctionName\x12 \n\x0b\x64\x65scription\x18\x02 \x01(\tR\x0b\x64\x65scription\x12y\n\x08role_arn\x18\x03 \x01(\x0b\x32\x36.project.planton.shared.foreignkey.v1.StringValueOrRefB&\xbaH\x03\xc8\x01\x01\x88\xd4\x61\xd0\x01\x92\xd4\x61\x17status.outputs.role_arnR\x07roleArn\x12\x18\n\x07runtime\x18\x04 \x01(\tR\x07runtime\x12\x18\n\x07handler\x18\x05 \x01(\tR\x07handler\x12\x1b\n\tmemory_mb\x18\x06 \x01(\x05R\x08memoryMb\x12\'\n\x0ftimeout_seconds\x18\x07 \x01(\x05R\x0etimeoutSeconds\x12\x31\n\x14reserved_concurrency\x18\x08 \x01(\x05R\x13reservedConcurrency\x12k\n\x0b\x65nvironment\x18\t \x03(\x0b\x32I.project.planton.provider.aws.awslambda.v1.AwsLambdaSpec.EnvironmentEntryR\x0b\x65nvironment\x12W\n\x07subnets\x18\n \x03(\x0b\x32\x36.project.planton.shared.foreignkey.v1.StringValueOrRefB\x05\x88\xd4\x61\xd9\x01R\x07subnets\x12\x8a\x01\n\x0fsecurity_groups\x18\x0b \x03(\x0b\x32\x36.project.planton.shared.foreignkey.v1.StringValueOrRefB)\x88\xd4\x61\xd7\x01\x92\xd4\x61 status.outputs.security_group_idR\x0esecurityGroups\x12\x65\n\x0c\x61rchitecture\x18\x0c \x01(\x0e\x32\x37.project.planton.provider.aws.awslambda.v1.ArchitectureB\x08\xbaH\x05\x82\x01\x02\x10\x01R\x0c\x61rchitecture\x12U\n\nlayer_arns\x18\r \x03(\x0b\x32\x36.project.planton.shared.foreignkey.v1.StringValueOrRefR\tlayerArns\x12w\n\x0bkms_key_arn\x18\x0e \x01(\x0b\x32\x36.project.planton.shared.foreignkey.v1.StringValueOrRefB\x1f\x88\xd4\x61\xdc\x01\x92\xd4\x61\x16status.outputs.key_arnR\tkmsKeyArn\x12m\n\x10\x63ode_source_type\x18\x0f \x01(\x0e\x32\x39.project.planton.provider.aws.awslambda.v1.CodeSourceTypeB\x08\xbaH\x05\x82\x01\x02\x10\x01R\x0e\x63odeSourceType\x12\x41\n\x02s3\x18\x10 \x01(\x0b\x32\x31.project.planton.provider.aws.awslambda.v1.S3CodeR\x02s3\x12\x1b\n\timage_uri\x18\x11 \x01(\tR\x08imageUri\x1a>\n\x10\x45nvironmentEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01:\x8e\x08\xbaH\x8a\x08\x1aU\n\x19\x63ode_source_type_required\x12\x1c\x63ode_source_type must be set\x1a\x1athis.code_source_type != 0\x1a\xf6\x01\n.s3_requires_runtime_handler_and_excludes_image\x12Rwhen code_source_type is S3, set s3, runtime, and handler; image_uri must be empty\x1apthis.code_source_type != 1 || (has(this.s3) && this.image_uri == \'\' && this.runtime != \'\' && this.handler != \'\')\x1a\xb2\x01\n(image_requires_image_uri_and_excludes_s3\x12?when code_source_type is IMAGE, set image_uri and do not set s3\x1a\x45this.code_source_type != 2 || (this.image_uri != \'\' && !has(this.s3))\x1a\x96\x01\n\x17memory_range_or_default\x12\x30memory_mb must be between 128 and 10240 when set\x1aIthis.memory_mb == 0 || (this.memory_mb >= 128 && this.memory_mb <= 10240)\x1a\xa7\x01\n\x18timeout_range_or_default\x12\x32timeout_seconds must be between 1 and 900 when set\x1aWthis.timeout_seconds == 0 || (this.timeout_seconds >= 1 && this.timeout_seconds <= 900)\x1a\xbf\x01\n\x1ereserved_concurrency_semantics\x12\x39reserved_concurrency must be -1, 0, or a positive integer\x1a\x62this.reserved_concurrency == -1 || this.reserved_concurrency == 0 || this.reserved_concurrency > 0\"k\n\x06S3Code\x12\x1f\n\x06\x62ucket\x18\x01 \x01(\tB\x07\xbaH\x04r\x02\x10\x01R\x06\x62ucket\x12\x19\n\x03key\x18\x02 \x01(\tB\x07\xbaH\x04r\x02\x10\x01R\x03key\x12%\n\x0eobject_version\x18\x03 \x01(\tR\robjectVersion*C\n\x0c\x41rchitecture\x12\x1c\n\x18\x41RCHITECTURE_UNSPECIFIED\x10\x00\x12\n\n\x06X86_64\x10\x01\x12\t\n\x05\x41RM64\x10\x02*g\n\x0e\x43odeSourceType\x12 \n\x1c\x43ODE_SOURCE_TYPE_UNSPECIFIED\x10\x00\x12\x17\n\x13\x43ODE_SOURCE_TYPE_S3\x10\x01\x12\x1a\n\x16\x43ODE_SOURCE_TYPE_IMAGE\x10\x02\x42\x85\x02\n-com.project.planton.provider.aws.awslambda.v1B\tSpecProtoP\x01\xa2\x02\x05PPPAA\xaa\x02)Project.Planton.Provider.Aws.Awslambda.V1\xca\x02)Project\\Planton\\Provider\\Aws\\Awslambda\\V1\xe2\x02\x35Project\\Planton\\Provider\\Aws\\Awslambda\\V1\\GPBMetadata\xea\x02.Project::Planton::Provider::Aws::Awslambda::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'project.planton.provider.aws.awslambda.v1.spec_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n-com.project.planton.provider.aws.awslambda.v1B\tSpecProtoP\001\242\002\005PPPAA\252\002)Project.Planton.Provider.Aws.Awslambda.V1\312\002)Project\\Planton\\Provider\\Aws\\Awslambda\\V1\342\0025Project\\Planton\\Provider\\Aws\\Awslambda\\V1\\GPBMetadata\352\002.Project::Planton::Provider::Aws::Awslambda::V1'
  _globals['_AWSLAMBDASPEC_ENVIRONMENTENTRY']._loaded_options = None
  _globals['_AWSLAMBDASPEC_ENVIRONMENTENTRY']._serialized_options = b'8\001'
  _globals['_AWSLAMBDASPEC'].fields_by_name['function_name']._loaded_options = None
  _globals['_AWSLAMBDASPEC'].fields_by_name['function_name']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_AWSLAMBDASPEC'].fields_by_name['role_arn']._loaded_options = None
  _globals['_AWSLAMBDASPEC'].fields_by_name['role_arn']._serialized_options = b'\272H\003\310\001\001\210\324a\320\001\222\324a\027status.outputs.role_arn'
  _globals['_AWSLAMBDASPEC'].fields_by_name['subnets']._loaded_options = None
  _globals['_AWSLAMBDASPEC'].fields_by_name['subnets']._serialized_options = b'\210\324a\331\001'
  _globals['_AWSLAMBDASPEC'].fields_by_name['security_groups']._loaded_options = None
  _globals['_AWSLAMBDASPEC'].fields_by_name['security_groups']._serialized_options = b'\210\324a\327\001\222\324a status.outputs.security_group_id'
  _globals['_AWSLAMBDASPEC'].fields_by_name['architecture']._loaded_options = None
  _globals['_AWSLAMBDASPEC'].fields_by_name['architecture']._serialized_options = b'\272H\005\202\001\002\020\001'
  _globals['_AWSLAMBDASPEC'].fields_by_name['kms_key_arn']._loaded_options = None
  _globals['_AWSLAMBDASPEC'].fields_by_name['kms_key_arn']._serialized_options = b'\210\324a\334\001\222\324a\026status.outputs.key_arn'
  _globals['_AWSLAMBDASPEC'].fields_by_name['code_source_type']._loaded_options = None
  _globals['_AWSLAMBDASPEC'].fields_by_name['code_source_type']._serialized_options = b'\272H\005\202\001\002\020\001'
  _globals['_AWSLAMBDASPEC']._loaded_options = None
  _globals['_AWSLAMBDASPEC']._serialized_options = b'\272H\212\010\032U\n\031code_source_type_required\022\034code_source_type must be set\032\032this.code_source_type != 0\032\366\001\n.s3_requires_runtime_handler_and_excludes_image\022Rwhen code_source_type is S3, set s3, runtime, and handler; image_uri must be empty\032pthis.code_source_type != 1 || (has(this.s3) && this.image_uri == \'\' && this.runtime != \'\' && this.handler != \'\')\032\262\001\n(image_requires_image_uri_and_excludes_s3\022?when code_source_type is IMAGE, set image_uri and do not set s3\032Ethis.code_source_type != 2 || (this.image_uri != \'\' && !has(this.s3))\032\226\001\n\027memory_range_or_default\0220memory_mb must be between 128 and 10240 when set\032Ithis.memory_mb == 0 || (this.memory_mb >= 128 && this.memory_mb <= 10240)\032\247\001\n\030timeout_range_or_default\0222timeout_seconds must be between 1 and 900 when set\032Wthis.timeout_seconds == 0 || (this.timeout_seconds >= 1 && this.timeout_seconds <= 900)\032\277\001\n\036reserved_concurrency_semantics\0229reserved_concurrency must be -1, 0, or a positive integer\032bthis.reserved_concurrency == -1 || this.reserved_concurrency == 0 || this.reserved_concurrency > 0'
  _globals['_S3CODE'].fields_by_name['bucket']._loaded_options = None
  _globals['_S3CODE'].fields_by_name['bucket']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_S3CODE'].fields_by_name['key']._loaded_options = None
  _globals['_S3CODE'].fields_by_name['key']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_ARCHITECTURE']._serialized_start=2649
  _globals['_ARCHITECTURE']._serialized_end=2716
  _globals['_CODESOURCETYPE']._serialized_start=2718
  _globals['_CODESOURCETYPE']._serialized_end=2821
  _globals['_AWSLAMBDASPEC']._serialized_start=185
  _globals['_AWSLAMBDASPEC']._serialized_end=2538
  _globals['_AWSLAMBDASPEC_ENVIRONMENTENTRY']._serialized_start=1435
  _globals['_AWSLAMBDASPEC_ENVIRONMENTENTRY']._serialized_end=1497
  _globals['_S3CODE']._serialized_start=2540
  _globals['_S3CODE']._serialized_end=2647
# @@protoc_insertion_point(module_scope)
