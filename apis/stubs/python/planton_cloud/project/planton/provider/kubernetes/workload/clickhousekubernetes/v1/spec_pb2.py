# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: project/planton/provider/kubernetes/workload/clickhousekubernetes/v1/spec.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'project/planton/provider/kubernetes/workload/clickhousekubernetes/v1/spec.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2
from google.protobuf import descriptor_pb2 as google_dot_protobuf_dot_descriptor__pb2
from project.planton.shared.kubernetes import kubernetes_pb2 as project_dot_planton_dot_shared_dot_kubernetes_dot_kubernetes__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nOproject/planton/provider/kubernetes/workload/clickhousekubernetes/v1/spec.proto\x12\x44project.planton.provider.kubernetes.workload.clickhousekubernetes.v1\x1a\x1b\x62uf/validate/validate.proto\x1a google/protobuf/descriptor.proto\x1a\x32project/planton/shared/kubernetes/kubernetes.proto\"\xdf\x07\n\x18\x43lickHouseKubernetesSpec\x12I\n\x0c\x63luster_name\x18\x01 \x01(\tB&\xbaH#r!2\x1f^[a-z0-9]([-a-z0-9]*[a-z0-9])?$R\x0b\x63lusterName\x12\xaf\x01\n\tcontainer\x18\x02 \x01(\x0b\x32\x63.project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickHouseKubernetesContainerB,\xca\xb5\xfd\x01\'\x08\x01\x12\x1b\n\x0c\n\x05\x32\x30\x30\x30m\x12\x03\x34Gi\x12\x0b\n\x04\x35\x30\x30m\x12\x03\x31Gi\x18\x01\"\x04\x35\x30GiR\tcontainer\x12{\n\x07ingress\x18\x03 \x01(\x0b\x32\x61.project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickHouseKubernetesIngressR\x07ingress\x12\x81\x01\n\x07\x63luster\x18\x04 \x01(\x0b\x32g.project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickHouseKubernetesClusterConfigR\x07\x63luster\x12\x18\n\x07version\x18\x05 \x01(\tR\x07version\x12\x90\x01\n\x0c\x63oordination\x18\x06 \x01(\x0b\x32l.project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickHouseKubernetesCoordinationConfigR\x0c\x63oordination\x12\x8b\x01\n\tzookeeper\x18\x07 \x01(\x0b\x32i.project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickHouseKubernetesZookeeperConfigB\x02\x18\x01R\tzookeeper\x12\x89\x01\n\x07logging\x18\x08 \x01(\x0b\x32g.project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickHouseKubernetesLoggingConfigB\x06\xbaH\x03\xc8\x01\x01R\x07logging\"\xcc\x04\n\x1d\x43lickHouseKubernetesContainer\x12#\n\x08replicas\x18\x01 \x01(\x05\x42\x07\xbaH\x04\x1a\x02(\x01R\x08replicas\x12S\n\tresources\x18\x02 \x01(\x0b\x32\x35.project.planton.shared.kubernetes.ContainerResourcesR\tresources\x12\x34\n\x16is_persistence_enabled\x18\x03 \x01(\x08R\x14isPersistenceEnabled\x12\x1b\n\tdisk_size\x18\x04 \x01(\tR\x08\x64iskSize:\xdd\x02\xbaH\xd9\x02\x1a\xd6\x02\n!spec.container.disk_size.required\x12IDisk size is required and must match the format if persistence is enabled\x1a\xe5\x01((!this.is_persistence_enabled && (size(this.disk_size) == 0 || this.disk_size == \'\')) || (this.is_persistence_enabled && size(this.disk_size) > 0 && this.disk_size.matches(\'^\\\\d+(\\\\.\\\\d+)?\\\\s?(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)$\')))\"\xc9\x02\n!ClickHouseKubernetesClusterConfig\x12\x1d\n\nis_enabled\x18\x01 \x01(\x08R\tisEnabled\x12\x1f\n\x0bshard_count\x18\x02 \x01(\x05R\nshardCount\x12#\n\rreplica_count\x18\x03 \x01(\x05R\x0creplicaCount:\xbe\x01\xbaH\xba\x01\x1a\xb7\x01\n spec.cluster.counts_when_enabled\x12KShard count and replica count must be at least 1 when clustering is enabled\x1a\x46!this.is_enabled || (this.shard_count >= 1 && this.replica_count >= 1)\"\xc8\x04\n&ClickHouseKubernetesCoordinationConfig\x12\x91\x01\n\x04type\x18\x01 \x01(\x0e\x32}.project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickHouseKubernetesCoordinationConfig.CoordinationTypeR\x04type\x12\x8b\x01\n\rkeeper_config\x18\x02 \x01(\x0b\x32\x66.project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickHouseKubernetesKeeperConfigR\x0ckeeperConfig\x12\x9d\x01\n\x0f\x65xternal_config\x18\x03 \x01(\x0b\x32t.project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickHouseKubernetesExternalCoordinationConfigR\x0e\x65xternalConfig\"\\\n\x10\x43oordinationType\x12\x0f\n\x0bunspecified\x10\x00\x12\n\n\x06keeper\x10\x01\x12\x13\n\x0f\x65xternal_keeper\x10\x02\x12\x16\n\x12\x65xternal_zookeeper\x10\x03\"\xf5\x01\n ClickHouseKubernetesKeeperConfig\x12\'\n\x08replicas\x18\x01 \x01(\x05\x42\x0b\xbaH\x08\x1a\x06\x30\x01\x30\x03\x30\x05R\x08replicas\x12S\n\tresources\x18\x02 \x01(\x0b\x32\x35.project.planton.shared.kubernetes.ContainerResourcesR\tresources\x12S\n\tdisk_size\x18\x03 \x01(\tB6\xbaH3r12/^\\d+(\\.\\d+)?\\s?(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)$R\x08\x64iskSize\"P\n.ClickHouseKubernetesExternalCoordinationConfig\x12\x1e\n\x05nodes\x18\x01 \x03(\tB\x08\xbaH\x05\x92\x01\x02\x08\x01R\x05nodes\"\xdf\x01\n!ClickHouseKubernetesLoggingConfig\x12\x86\x01\n\x05level\x18\x01 \x01(\x0e\x32p.project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickHouseKubernetesLoggingConfig.LogLevelR\x05level\"1\n\x08LogLevel\x12\x0f\n\x0binformation\x10\x00\x12\t\n\x05\x64\x65\x62ug\x10\x01\x12\t\n\x05trace\x10\x02\"\xd2\x01\n\x1b\x43lickHouseKubernetesIngress\x12\x18\n\x07\x65nabled\x18\x01 \x01(\x08R\x07\x65nabled\x12\x1a\n\x08hostname\x18\x02 \x01(\tR\x08hostname:}\xbaHz\x1ax\n\x1espec.ingress.hostname.required\x12,hostname is required when ingress is enabled\x1a(!this.enabled || size(this.hostname) > 0\"\x86\x02\n#ClickHouseKubernetesZookeeperConfig\x12!\n\x0cuse_external\x18\x01 \x01(\x08R\x0buseExternal\x12\x14\n\x05nodes\x18\x02 \x03(\tR\x05nodes:\xa5\x01\xbaH\xa1\x01\x1a\x9e\x01\n\"spec.zookeeper.nodes_when_external\x12KAt least one ZooKeeper node must be specified when using external ZooKeeper\x1a+!this.use_external || size(this.nodes) >= 1:\xb1\x01\n\x11\x64\x65\x66\x61ult_container\x12\x1d.google.protobuf.FieldOptions\x18\xd9\xd6\x1f \x01(\x0b\x32\x63.project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickHouseKubernetesContainerR\x10\x64\x65\x66\x61ultContainerB\x8e\x03\nHcom.project.planton.provider.kubernetes.workload.clickhousekubernetes.v1B\tSpecProtoP\x01\xa2\x02\x06PPPKWC\xaa\x02\x44Project.Planton.Provider.Kubernetes.Workload.Clickhousekubernetes.V1\xca\x02\x44Project\\Planton\\Provider\\Kubernetes\\Workload\\Clickhousekubernetes\\V1\xe2\x02PProject\\Planton\\Provider\\Kubernetes\\Workload\\Clickhousekubernetes\\V1\\GPBMetadata\xea\x02JProject::Planton::Provider::Kubernetes::Workload::Clickhousekubernetes::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.spec_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\nHcom.project.planton.provider.kubernetes.workload.clickhousekubernetes.v1B\tSpecProtoP\001\242\002\006PPPKWC\252\002DProject.Planton.Provider.Kubernetes.Workload.Clickhousekubernetes.V1\312\002DProject\\Planton\\Provider\\Kubernetes\\Workload\\Clickhousekubernetes\\V1\342\002PProject\\Planton\\Provider\\Kubernetes\\Workload\\Clickhousekubernetes\\V1\\GPBMetadata\352\002JProject::Planton::Provider::Kubernetes::Workload::Clickhousekubernetes::V1'
  _globals['_CLICKHOUSEKUBERNETESSPEC'].fields_by_name['cluster_name']._loaded_options = None
  _globals['_CLICKHOUSEKUBERNETESSPEC'].fields_by_name['cluster_name']._serialized_options = b'\272H#r!2\037^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
  _globals['_CLICKHOUSEKUBERNETESSPEC'].fields_by_name['container']._loaded_options = None
  _globals['_CLICKHOUSEKUBERNETESSPEC'].fields_by_name['container']._serialized_options = b'\312\265\375\001\'\010\001\022\033\n\014\n\0052000m\022\0034Gi\022\013\n\004500m\022\0031Gi\030\001\"\00450Gi'
  _globals['_CLICKHOUSEKUBERNETESSPEC'].fields_by_name['zookeeper']._loaded_options = None
  _globals['_CLICKHOUSEKUBERNETESSPEC'].fields_by_name['zookeeper']._serialized_options = b'\030\001'
  _globals['_CLICKHOUSEKUBERNETESSPEC'].fields_by_name['logging']._loaded_options = None
  _globals['_CLICKHOUSEKUBERNETESSPEC'].fields_by_name['logging']._serialized_options = b'\272H\003\310\001\001'
  _globals['_CLICKHOUSEKUBERNETESCONTAINER'].fields_by_name['replicas']._loaded_options = None
  _globals['_CLICKHOUSEKUBERNETESCONTAINER'].fields_by_name['replicas']._serialized_options = b'\272H\004\032\002(\001'
  _globals['_CLICKHOUSEKUBERNETESCONTAINER']._loaded_options = None
  _globals['_CLICKHOUSEKUBERNETESCONTAINER']._serialized_options = b'\272H\331\002\032\326\002\n!spec.container.disk_size.required\022IDisk size is required and must match the format if persistence is enabled\032\345\001((!this.is_persistence_enabled && (size(this.disk_size) == 0 || this.disk_size == \'\')) || (this.is_persistence_enabled && size(this.disk_size) > 0 && this.disk_size.matches(\'^\\\\d+(\\\\.\\\\d+)?\\\\s?(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)$\')))'
  _globals['_CLICKHOUSEKUBERNETESCLUSTERCONFIG']._loaded_options = None
  _globals['_CLICKHOUSEKUBERNETESCLUSTERCONFIG']._serialized_options = b'\272H\272\001\032\267\001\n spec.cluster.counts_when_enabled\022KShard count and replica count must be at least 1 when clustering is enabled\032F!this.is_enabled || (this.shard_count >= 1 && this.replica_count >= 1)'
  _globals['_CLICKHOUSEKUBERNETESKEEPERCONFIG'].fields_by_name['replicas']._loaded_options = None
  _globals['_CLICKHOUSEKUBERNETESKEEPERCONFIG'].fields_by_name['replicas']._serialized_options = b'\272H\010\032\0060\0010\0030\005'
  _globals['_CLICKHOUSEKUBERNETESKEEPERCONFIG'].fields_by_name['disk_size']._loaded_options = None
  _globals['_CLICKHOUSEKUBERNETESKEEPERCONFIG'].fields_by_name['disk_size']._serialized_options = b'\272H3r12/^\\d+(\\.\\d+)?\\s?(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)$'
  _globals['_CLICKHOUSEKUBERNETESEXTERNALCOORDINATIONCONFIG'].fields_by_name['nodes']._loaded_options = None
  _globals['_CLICKHOUSEKUBERNETESEXTERNALCOORDINATIONCONFIG'].fields_by_name['nodes']._serialized_options = b'\272H\005\222\001\002\010\001'
  _globals['_CLICKHOUSEKUBERNETESINGRESS']._loaded_options = None
  _globals['_CLICKHOUSEKUBERNETESINGRESS']._serialized_options = b'\272Hz\032x\n\036spec.ingress.hostname.required\022,hostname is required when ingress is enabled\032(!this.enabled || size(this.hostname) > 0'
  _globals['_CLICKHOUSEKUBERNETESZOOKEEPERCONFIG']._loaded_options = None
  _globals['_CLICKHOUSEKUBERNETESZOOKEEPERCONFIG']._serialized_options = b'\272H\241\001\032\236\001\n\"spec.zookeeper.nodes_when_external\022KAt least one ZooKeeper node must be specified when using external ZooKeeper\032+!this.use_external || size(this.nodes) >= 1'
  _globals['_CLICKHOUSEKUBERNETESSPEC']._serialized_start=269
  _globals['_CLICKHOUSEKUBERNETESSPEC']._serialized_end=1260
  _globals['_CLICKHOUSEKUBERNETESCONTAINER']._serialized_start=1263
  _globals['_CLICKHOUSEKUBERNETESCONTAINER']._serialized_end=1851
  _globals['_CLICKHOUSEKUBERNETESCLUSTERCONFIG']._serialized_start=1854
  _globals['_CLICKHOUSEKUBERNETESCLUSTERCONFIG']._serialized_end=2183
  _globals['_CLICKHOUSEKUBERNETESCOORDINATIONCONFIG']._serialized_start=2186
  _globals['_CLICKHOUSEKUBERNETESCOORDINATIONCONFIG']._serialized_end=2770
  _globals['_CLICKHOUSEKUBERNETESCOORDINATIONCONFIG_COORDINATIONTYPE']._serialized_start=2678
  _globals['_CLICKHOUSEKUBERNETESCOORDINATIONCONFIG_COORDINATIONTYPE']._serialized_end=2770
  _globals['_CLICKHOUSEKUBERNETESKEEPERCONFIG']._serialized_start=2773
  _globals['_CLICKHOUSEKUBERNETESKEEPERCONFIG']._serialized_end=3018
  _globals['_CLICKHOUSEKUBERNETESEXTERNALCOORDINATIONCONFIG']._serialized_start=3020
  _globals['_CLICKHOUSEKUBERNETESEXTERNALCOORDINATIONCONFIG']._serialized_end=3100
  _globals['_CLICKHOUSEKUBERNETESLOGGINGCONFIG']._serialized_start=3103
  _globals['_CLICKHOUSEKUBERNETESLOGGINGCONFIG']._serialized_end=3326
  _globals['_CLICKHOUSEKUBERNETESLOGGINGCONFIG_LOGLEVEL']._serialized_start=3277
  _globals['_CLICKHOUSEKUBERNETESLOGGINGCONFIG_LOGLEVEL']._serialized_end=3326
  _globals['_CLICKHOUSEKUBERNETESINGRESS']._serialized_start=3329
  _globals['_CLICKHOUSEKUBERNETESINGRESS']._serialized_end=3539
  _globals['_CLICKHOUSEKUBERNETESZOOKEEPERCONFIG']._serialized_start=3542
  _globals['_CLICKHOUSEKUBERNETESZOOKEEPERCONFIG']._serialized_end=3804
# @@protoc_insertion_point(module_scope)
