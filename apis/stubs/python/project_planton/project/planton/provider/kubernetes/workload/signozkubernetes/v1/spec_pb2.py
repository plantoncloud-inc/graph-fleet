# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: project/planton/provider/kubernetes/workload/signozkubernetes/v1/spec.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'project/planton/provider/kubernetes/workload/signozkubernetes/v1/spec.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2
from google.protobuf import descriptor_pb2 as google_dot_protobuf_dot_descriptor__pb2
from project.planton.shared.kubernetes import kubernetes_pb2 as project_dot_planton_dot_shared_dot_kubernetes_dot_kubernetes__pb2
from project.planton.shared.options import options_pb2 as project_dot_planton_dot_shared_dot_options_dot_options__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nKproject/planton/provider/kubernetes/workload/signozkubernetes/v1/spec.proto\x12@project.planton.provider.kubernetes.workload.signozkubernetes.v1\x1a\x1b\x62uf/validate/validate.proto\x1a google/protobuf/descriptor.proto\x1a\x32project/planton/shared/kubernetes/kubernetes.proto\x1a,project/planton/shared/options/options.proto\"\xca\x06\n\x14SignozKubernetesSpec\x12\xae\x01\n\x10signoz_container\x18\x01 \x01(\x0b\x32[.project.planton.provider.kubernetes.workload.signozkubernetes.v1.SignozKubernetesContainerB&\x8a\xb8\x91\x02!\x08\x01\x12\x1d\n\x0c\n\x05\x31\x30\x30\x30m\x12\x03\x32Gi\x12\r\n\x04\x32\x30\x30m\x12\x05\x35\x31\x32MiR\x0fsignozContainer\x12\xbb\x01\n\x18otel_collector_container\x18\x02 \x01(\x0b\x32[.project.planton.provider.kubernetes.workload.signozkubernetes.v1.SignozKubernetesContainerB$\x92\xb8\x91\x02\x1f\x08\x02\x12\x1b\n\x0c\n\x05\x32\x30\x30\x30m\x12\x03\x34Gi\x12\x0b\n\x04\x35\x30\x30m\x12\x03\x31GiR\x16otelCollectorContainer\x12\x84\x01\n\x08\x64\x61tabase\x18\x03 \x01(\x0b\x32`.project.planton.provider.kubernetes.workload.signozkubernetes.v1.SignozKubernetesDatabaseConfigB\x06\xbaH\x03\xc8\x01\x01R\x08\x64\x61tabase\x12s\n\x07ingress\x18\x04 \x01(\x0b\x32Y.project.planton.provider.kubernetes.workload.signozkubernetes.v1.SignozKubernetesIngressR\x07ingress\x12\x87\x01\n\x0bhelm_values\x18\x05 \x03(\x0b\x32\x66.project.planton.provider.kubernetes.workload.signozkubernetes.v1.SignozKubernetesSpec.HelmValuesEntryR\nhelmValues\x1a=\n\x0fHelmValuesEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\"\xde\x01\n\x19SignozKubernetesContainer\x12#\n\x08replicas\x18\x01 \x01(\x05\x42\x07\xbaH\x04\x1a\x02(\x01R\x08replicas\x12S\n\tresources\x18\x02 \x01(\x0b\x32\x35.project.planton.shared.kubernetes.ContainerResourcesR\tresources\x12G\n\x05image\x18\x03 \x01(\x0b\x32\x31.project.planton.shared.kubernetes.ContainerImageR\x05image\"\x89\x04\n\x1eSignozKubernetesDatabaseConfig\x12\x1f\n\x0bis_external\x18\x01 \x01(\x08R\nisExternal\x12\x91\x01\n\x11\x65xternal_database\x18\x02 \x01(\x0b\x32\x64.project.planton.provider.kubernetes.workload.signozkubernetes.v1.SignozKubernetesExternalClickhouseR\x10\x65xternalDatabase\x12\x8e\x01\n\x10managed_database\x18\x03 \x01(\x0b\x32\x63.project.planton.provider.kubernetes.workload.signozkubernetes.v1.SignozKubernetesManagedClickhouseR\x0fmanagedDatabase:\xa0\x01\xbaH\x9c\x01\x1a\x99\x01\n\x1fspec.database.external_required\x12\x44\x45xternal database configuration is required when is_external is true\x1a\x30!this.is_external || has(this.external_database)\"\xf2\x02\n\"SignozKubernetesExternalClickhouse\x12\x1a\n\x04host\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x04host\x12\x35\n\thttp_port\x18\x02 \x01(\x05\x42\x13\xbaH\x08\x1a\x06\x18\xff\xff\x03 \x00\x8a\xa6\x1d\x04\x38\x31\x32\x33H\x00R\x08httpPort\x88\x01\x01\x12\x33\n\x08tcp_port\x18\x03 \x01(\x05\x42\x13\xbaH\x08\x1a\x06\x18\xff\xff\x03 \x00\x8a\xa6\x1d\x04\x39\x30\x30\x30H\x01R\x07tcpPort\x88\x01\x01\x12\x33\n\x0c\x63luster_name\x18\x04 \x01(\tB\x0b\x8a\xa6\x1d\x07\x63lusterH\x02R\x0b\x63lusterName\x88\x01\x01\x12\x1b\n\tis_secure\x18\x05 \x01(\x08R\x08isSecure\x12\"\n\x08username\x18\x06 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x08username\x12\"\n\x08password\x18\x07 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x08passwordB\x0c\n\n_http_portB\x0b\n\t_tcp_portB\x0f\n\r_cluster_name\"\xd7\x03\n!SignozKubernetesManagedClickhouse\x12\xb1\x01\n\tcontainer\x18\x01 \x01(\x0b\x32\x65.project.planton.provider.kubernetes.workload.signozkubernetes.v1.SignozKubernetesClickhouseContainerB,\x9a\xb8\x91\x02\'\x08\x01\x12\x1b\n\x0c\n\x05\x32\x30\x30\x30m\x12\x03\x34Gi\x12\x0b\n\x04\x35\x30\x30m\x12\x03\x31Gi \x01*\x04\x32\x30GiR\tcontainer\x12}\n\x07\x63luster\x18\x02 \x01(\x0b\x32\x63.project.planton.provider.kubernetes.workload.signozkubernetes.v1.SignozKubernetesClickhouseClusterR\x07\x63luster\x12\x7f\n\tzookeeper\x18\x03 \x01(\x0b\x32\x61.project.planton.provider.kubernetes.workload.signozkubernetes.v1.SignozKubernetesZookeeperConfigR\tzookeeper\"\xa6\x05\n#SignozKubernetesClickhouseContainer\x12#\n\x08replicas\x18\x01 \x01(\x05\x42\x07\xbaH\x04\x1a\x02(\x01R\x08replicas\x12S\n\tresources\x18\x02 \x01(\x0b\x32\x35.project.planton.shared.kubernetes.ContainerResourcesR\tresources\x12G\n\x05image\x18\x03 \x01(\x0b\x32\x31.project.planton.shared.kubernetes.ContainerImageR\x05image\x12\x34\n\x16is_persistence_enabled\x18\x04 \x01(\x08R\x14isPersistenceEnabled\x12\x1b\n\tdisk_size\x18\x05 \x01(\tR\x08\x64iskSize:\xe8\x02\xbaH\xe4\x02\x1a\xe1\x02\n,spec.clickhouse.container.disk_size.required\x12IDisk size is required and must match the format if persistence is enabled\x1a\xe5\x01((!this.is_persistence_enabled && (size(this.disk_size) == 0 || this.disk_size == \'\')) || (this.is_persistence_enabled && size(this.disk_size) > 0 && this.disk_size.matches(\'^\\\\d+(\\\\.\\\\d+)?\\\\s?(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)$\')))\"\xd4\x02\n!SignozKubernetesClickhouseCluster\x12\x1d\n\nis_enabled\x18\x01 \x01(\x08R\tisEnabled\x12\x1f\n\x0bshard_count\x18\x02 \x01(\x05R\nshardCount\x12#\n\rreplica_count\x18\x03 \x01(\x05R\x0creplicaCount:\xc9\x01\xbaH\xc5\x01\x1a\xc2\x01\n+spec.clickhouse.cluster.counts_when_enabled\x12KShard count and replica count must be at least 1 when clustering is enabled\x1a\x46!this.is_enabled || (this.shard_count >= 1 && this.replica_count >= 1)\"\xf3\x01\n\x1fSignozKubernetesZookeeperConfig\x12\x1d\n\nis_enabled\x18\x01 \x01(\x08R\tisEnabled\x12\xb0\x01\n\tcontainer\x18\x02 \x01(\x0b\x32\x64.project.planton.provider.kubernetes.workload.signozkubernetes.v1.SignozKubernetesZookeeperContainerB,\xa2\xb8\x91\x02\'\x08\x01\x12\x1e\n\r\n\x04\x35\x30\x30m\x12\x05\x35\x31\x32Mi\x12\r\n\x04\x31\x30\x30m\x12\x05\x32\x35\x36Mi\"\x03\x38GiR\tcontainer\"\xbb\x03\n\"SignozKubernetesZookeeperContainer\x12#\n\x08replicas\x18\x01 \x01(\x05\x42\x07\xbaH\x04\x1a\x02(\x01R\x08replicas\x12S\n\tresources\x18\x02 \x01(\x0b\x32\x35.project.planton.shared.kubernetes.ContainerResourcesR\tresources\x12G\n\x05image\x18\x03 \x01(\x0b\x32\x31.project.planton.shared.kubernetes.ContainerImageR\x05image\x12\xd1\x01\n\tdisk_size\x18\x04 \x01(\tB\xb3\x01\xbaH\xaf\x01\xba\x01\xab\x01\n!spec.zookeeper.disk_size.required\x12/Disk size is required and must match the format\x1aUsize(this) > 0 && this.matches(\'^\\\\d+(\\\\.\\\\d+)?\\\\s?(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)$\')R\x08\x64iskSize\"\x97\x02\n\x17SignozKubernetesIngress\x12q\n\x02ui\x18\x01 \x01(\x0b\x32\x61.project.planton.provider.kubernetes.workload.signozkubernetes.v1.SignozKubernetesIngressEndpointR\x02ui\x12\x88\x01\n\x0eotel_collector\x18\x02 \x01(\x0b\x32\x61.project.planton.provider.kubernetes.workload.signozkubernetes.v1.SignozKubernetesIngressEndpointR\rotelCollector\"\xd6\x01\n\x1fSignozKubernetesIngressEndpoint\x12\x18\n\x07\x65nabled\x18\x01 \x01(\x08R\x07\x65nabled\x12\x1a\n\x08hostname\x18\x02 \x01(\tR\x08hostname:}\xbaHz\x1ax\n\x1espec.ingress.hostname.required\x12,hostname is required when ingress is enabled\x1a(!this.enabled || size(this.hostname) > 0:\xb6\x01\n\x18\x64\x65\x66\x61ult_signoz_container\x12\x1d.google.protobuf.FieldOptions\x18\x81\x97\" \x01(\x0b\x32[.project.planton.provider.kubernetes.workload.signozkubernetes.v1.SignozKubernetesContainerR\x16\x64\x65\x66\x61ultSignozContainer:\xc5\x01\n default_otel_collector_container\x12\x1d.google.protobuf.FieldOptions\x18\x82\x97\" \x01(\x0b\x32[.project.planton.provider.kubernetes.workload.signozkubernetes.v1.SignozKubernetesContainerR\x1d\x64\x65\x66\x61ultOtelCollectorContainer:\xc8\x01\n\x1c\x64\x65\x66\x61ult_clickhouse_container\x12\x1d.google.protobuf.FieldOptions\x18\x83\x97\" \x01(\x0b\x32\x65.project.planton.provider.kubernetes.workload.signozkubernetes.v1.SignozKubernetesClickhouseContainerR\x1a\x64\x65\x66\x61ultClickhouseContainer:\xc5\x01\n\x1b\x64\x65\x66\x61ult_zookeeper_container\x12\x1d.google.protobuf.FieldOptions\x18\x84\x97\" \x01(\x0b\x32\x64.project.planton.provider.kubernetes.workload.signozkubernetes.v1.SignozKubernetesZookeeperContainerR\x19\x64\x65\x66\x61ultZookeeperContainerB\xfa\x02\nDcom.project.planton.provider.kubernetes.workload.signozkubernetes.v1B\tSpecProtoP\x01\xa2\x02\x06PPPKWS\xaa\x02@Project.Planton.Provider.Kubernetes.Workload.Signozkubernetes.V1\xca\x02@Project\\Planton\\Provider\\Kubernetes\\Workload\\Signozkubernetes\\V1\xe2\x02LProject\\Planton\\Provider\\Kubernetes\\Workload\\Signozkubernetes\\V1\\GPBMetadata\xea\x02\x46Project::Planton::Provider::Kubernetes::Workload::Signozkubernetes::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'project.planton.provider.kubernetes.workload.signozkubernetes.v1.spec_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\nDcom.project.planton.provider.kubernetes.workload.signozkubernetes.v1B\tSpecProtoP\001\242\002\006PPPKWS\252\002@Project.Planton.Provider.Kubernetes.Workload.Signozkubernetes.V1\312\002@Project\\Planton\\Provider\\Kubernetes\\Workload\\Signozkubernetes\\V1\342\002LProject\\Planton\\Provider\\Kubernetes\\Workload\\Signozkubernetes\\V1\\GPBMetadata\352\002FProject::Planton::Provider::Kubernetes::Workload::Signozkubernetes::V1'
  _globals['_SIGNOZKUBERNETESSPEC_HELMVALUESENTRY']._loaded_options = None
  _globals['_SIGNOZKUBERNETESSPEC_HELMVALUESENTRY']._serialized_options = b'8\001'
  _globals['_SIGNOZKUBERNETESSPEC'].fields_by_name['signoz_container']._loaded_options = None
  _globals['_SIGNOZKUBERNETESSPEC'].fields_by_name['signoz_container']._serialized_options = b'\212\270\221\002!\010\001\022\035\n\014\n\0051000m\022\0032Gi\022\r\n\004200m\022\005512Mi'
  _globals['_SIGNOZKUBERNETESSPEC'].fields_by_name['otel_collector_container']._loaded_options = None
  _globals['_SIGNOZKUBERNETESSPEC'].fields_by_name['otel_collector_container']._serialized_options = b'\222\270\221\002\037\010\002\022\033\n\014\n\0052000m\022\0034Gi\022\013\n\004500m\022\0031Gi'
  _globals['_SIGNOZKUBERNETESSPEC'].fields_by_name['database']._loaded_options = None
  _globals['_SIGNOZKUBERNETESSPEC'].fields_by_name['database']._serialized_options = b'\272H\003\310\001\001'
  _globals['_SIGNOZKUBERNETESCONTAINER'].fields_by_name['replicas']._loaded_options = None
  _globals['_SIGNOZKUBERNETESCONTAINER'].fields_by_name['replicas']._serialized_options = b'\272H\004\032\002(\001'
  _globals['_SIGNOZKUBERNETESDATABASECONFIG']._loaded_options = None
  _globals['_SIGNOZKUBERNETESDATABASECONFIG']._serialized_options = b'\272H\234\001\032\231\001\n\037spec.database.external_required\022DExternal database configuration is required when is_external is true\0320!this.is_external || has(this.external_database)'
  _globals['_SIGNOZKUBERNETESEXTERNALCLICKHOUSE'].fields_by_name['host']._loaded_options = None
  _globals['_SIGNOZKUBERNETESEXTERNALCLICKHOUSE'].fields_by_name['host']._serialized_options = b'\272H\003\310\001\001'
  _globals['_SIGNOZKUBERNETESEXTERNALCLICKHOUSE'].fields_by_name['http_port']._loaded_options = None
  _globals['_SIGNOZKUBERNETESEXTERNALCLICKHOUSE'].fields_by_name['http_port']._serialized_options = b'\272H\010\032\006\030\377\377\003 \000\212\246\035\0048123'
  _globals['_SIGNOZKUBERNETESEXTERNALCLICKHOUSE'].fields_by_name['tcp_port']._loaded_options = None
  _globals['_SIGNOZKUBERNETESEXTERNALCLICKHOUSE'].fields_by_name['tcp_port']._serialized_options = b'\272H\010\032\006\030\377\377\003 \000\212\246\035\0049000'
  _globals['_SIGNOZKUBERNETESEXTERNALCLICKHOUSE'].fields_by_name['cluster_name']._loaded_options = None
  _globals['_SIGNOZKUBERNETESEXTERNALCLICKHOUSE'].fields_by_name['cluster_name']._serialized_options = b'\212\246\035\007cluster'
  _globals['_SIGNOZKUBERNETESEXTERNALCLICKHOUSE'].fields_by_name['username']._loaded_options = None
  _globals['_SIGNOZKUBERNETESEXTERNALCLICKHOUSE'].fields_by_name['username']._serialized_options = b'\272H\003\310\001\001'
  _globals['_SIGNOZKUBERNETESEXTERNALCLICKHOUSE'].fields_by_name['password']._loaded_options = None
  _globals['_SIGNOZKUBERNETESEXTERNALCLICKHOUSE'].fields_by_name['password']._serialized_options = b'\272H\003\310\001\001'
  _globals['_SIGNOZKUBERNETESMANAGEDCLICKHOUSE'].fields_by_name['container']._loaded_options = None
  _globals['_SIGNOZKUBERNETESMANAGEDCLICKHOUSE'].fields_by_name['container']._serialized_options = b'\232\270\221\002\'\010\001\022\033\n\014\n\0052000m\022\0034Gi\022\013\n\004500m\022\0031Gi \001*\00420Gi'
  _globals['_SIGNOZKUBERNETESCLICKHOUSECONTAINER'].fields_by_name['replicas']._loaded_options = None
  _globals['_SIGNOZKUBERNETESCLICKHOUSECONTAINER'].fields_by_name['replicas']._serialized_options = b'\272H\004\032\002(\001'
  _globals['_SIGNOZKUBERNETESCLICKHOUSECONTAINER']._loaded_options = None
  _globals['_SIGNOZKUBERNETESCLICKHOUSECONTAINER']._serialized_options = b'\272H\344\002\032\341\002\n,spec.clickhouse.container.disk_size.required\022IDisk size is required and must match the format if persistence is enabled\032\345\001((!this.is_persistence_enabled && (size(this.disk_size) == 0 || this.disk_size == \'\')) || (this.is_persistence_enabled && size(this.disk_size) > 0 && this.disk_size.matches(\'^\\\\d+(\\\\.\\\\d+)?\\\\s?(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)$\')))'
  _globals['_SIGNOZKUBERNETESCLICKHOUSECLUSTER']._loaded_options = None
  _globals['_SIGNOZKUBERNETESCLICKHOUSECLUSTER']._serialized_options = b'\272H\305\001\032\302\001\n+spec.clickhouse.cluster.counts_when_enabled\022KShard count and replica count must be at least 1 when clustering is enabled\032F!this.is_enabled || (this.shard_count >= 1 && this.replica_count >= 1)'
  _globals['_SIGNOZKUBERNETESZOOKEEPERCONFIG'].fields_by_name['container']._loaded_options = None
  _globals['_SIGNOZKUBERNETESZOOKEEPERCONFIG'].fields_by_name['container']._serialized_options = b'\242\270\221\002\'\010\001\022\036\n\r\n\004500m\022\005512Mi\022\r\n\004100m\022\005256Mi\"\0038Gi'
  _globals['_SIGNOZKUBERNETESZOOKEEPERCONTAINER'].fields_by_name['replicas']._loaded_options = None
  _globals['_SIGNOZKUBERNETESZOOKEEPERCONTAINER'].fields_by_name['replicas']._serialized_options = b'\272H\004\032\002(\001'
  _globals['_SIGNOZKUBERNETESZOOKEEPERCONTAINER'].fields_by_name['disk_size']._loaded_options = None
  _globals['_SIGNOZKUBERNETESZOOKEEPERCONTAINER'].fields_by_name['disk_size']._serialized_options = b'\272H\257\001\272\001\253\001\n!spec.zookeeper.disk_size.required\022/Disk size is required and must match the format\032Usize(this) > 0 && this.matches(\'^\\\\d+(\\\\.\\\\d+)?\\\\s?(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)$\')'
  _globals['_SIGNOZKUBERNETESINGRESSENDPOINT']._loaded_options = None
  _globals['_SIGNOZKUBERNETESINGRESSENDPOINT']._serialized_options = b'\272Hz\032x\n\036spec.ingress.hostname.required\022,hostname is required when ingress is enabled\032(!this.enabled || size(this.hostname) > 0'
  _globals['_SIGNOZKUBERNETESSPEC']._serialized_start=307
  _globals['_SIGNOZKUBERNETESSPEC']._serialized_end=1149
  _globals['_SIGNOZKUBERNETESSPEC_HELMVALUESENTRY']._serialized_start=1088
  _globals['_SIGNOZKUBERNETESSPEC_HELMVALUESENTRY']._serialized_end=1149
  _globals['_SIGNOZKUBERNETESCONTAINER']._serialized_start=1152
  _globals['_SIGNOZKUBERNETESCONTAINER']._serialized_end=1374
  _globals['_SIGNOZKUBERNETESDATABASECONFIG']._serialized_start=1377
  _globals['_SIGNOZKUBERNETESDATABASECONFIG']._serialized_end=1898
  _globals['_SIGNOZKUBERNETESEXTERNALCLICKHOUSE']._serialized_start=1901
  _globals['_SIGNOZKUBERNETESEXTERNALCLICKHOUSE']._serialized_end=2271
  _globals['_SIGNOZKUBERNETESMANAGEDCLICKHOUSE']._serialized_start=2274
  _globals['_SIGNOZKUBERNETESMANAGEDCLICKHOUSE']._serialized_end=2745
  _globals['_SIGNOZKUBERNETESCLICKHOUSECONTAINER']._serialized_start=2748
  _globals['_SIGNOZKUBERNETESCLICKHOUSECONTAINER']._serialized_end=3426
  _globals['_SIGNOZKUBERNETESCLICKHOUSECLUSTER']._serialized_start=3429
  _globals['_SIGNOZKUBERNETESCLICKHOUSECLUSTER']._serialized_end=3769
  _globals['_SIGNOZKUBERNETESZOOKEEPERCONFIG']._serialized_start=3772
  _globals['_SIGNOZKUBERNETESZOOKEEPERCONFIG']._serialized_end=4015
  _globals['_SIGNOZKUBERNETESZOOKEEPERCONTAINER']._serialized_start=4018
  _globals['_SIGNOZKUBERNETESZOOKEEPERCONTAINER']._serialized_end=4461
  _globals['_SIGNOZKUBERNETESINGRESS']._serialized_start=4464
  _globals['_SIGNOZKUBERNETESINGRESS']._serialized_end=4743
  _globals['_SIGNOZKUBERNETESINGRESSENDPOINT']._serialized_start=4746
  _globals['_SIGNOZKUBERNETESINGRESSENDPOINT']._serialized_end=4960
# @@protoc_insertion_point(module_scope)
