# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: project/planton/provider/cloudflare/cloudflarednszone/v1/spec.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'project/planton/provider/cloudflare/cloudflarednszone/v1/spec.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nCproject/planton/provider/cloudflare/cloudflarednszone/v1/spec.proto\x12\x38project.planton.provider.cloudflare.cloudflarednszone.v1\x1a\x1b\x62uf/validate/validate.proto\"\xb7\x03\n\x15\x43loudflareDnsZoneSpec\x12\xd0\x01\n\tzone_name\x18\x01 \x01(\tB\xb2\x01\xbaH\xae\x01\xba\x01\xa7\x01\n\tzone_name\x12\x35zone_name must be a valid fully qualified domain name\x1a\x63this.matches(\'^(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?[.])+(?:[a-z](?:[a-z0-9-]{0,61}[a-z0-9])?)$\')\xc8\x01\x01R\x08zoneName\x12%\n\naccount_id\x18\x02 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\taccountId\x12\x63\n\x04plan\x18\x03 \x01(\x0e\x32O.project.planton.provider.cloudflare.cloudflarednszone.v1.CloudflareDnsZonePlanR\x04plan\x12\x16\n\x06paused\x18\x04 \x01(\x08R\x06paused\x12\'\n\x0f\x64\x65\x66\x61ult_proxied\x18\x05 \x01(\x08R\x0e\x64\x65\x66\x61ultProxied*H\n\x15\x43loudflareDnsZonePlan\x12\x08\n\x04\x46REE\x10\x00\x12\x07\n\x03PRO\x10\x01\x12\x0c\n\x08\x42USINESS\x10\x02\x12\x0e\n\nENTERPRISE\x10\x03\x42\xd0\x02\n<com.project.planton.provider.cloudflare.cloudflarednszone.v1B\tSpecProtoP\x01\xa2\x02\x05PPPCC\xaa\x02\x38Project.Planton.Provider.Cloudflare.Cloudflarednszone.V1\xca\x02\x38Project\\Planton\\Provider\\Cloudflare\\Cloudflarednszone\\V1\xe2\x02\x44Project\\Planton\\Provider\\Cloudflare\\Cloudflarednszone\\V1\\GPBMetadata\xea\x02=Project::Planton::Provider::Cloudflare::Cloudflarednszone::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'project.planton.provider.cloudflare.cloudflarednszone.v1.spec_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n<com.project.planton.provider.cloudflare.cloudflarednszone.v1B\tSpecProtoP\001\242\002\005PPPCC\252\0028Project.Planton.Provider.Cloudflare.Cloudflarednszone.V1\312\0028Project\\Planton\\Provider\\Cloudflare\\Cloudflarednszone\\V1\342\002DProject\\Planton\\Provider\\Cloudflare\\Cloudflarednszone\\V1\\GPBMetadata\352\002=Project::Planton::Provider::Cloudflare::Cloudflarednszone::V1'
  _globals['_CLOUDFLAREDNSZONESPEC'].fields_by_name['zone_name']._loaded_options = None
  _globals['_CLOUDFLAREDNSZONESPEC'].fields_by_name['zone_name']._serialized_options = b'\272H\256\001\272\001\247\001\n\tzone_name\0225zone_name must be a valid fully qualified domain name\032cthis.matches(\'^(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?[.])+(?:[a-z](?:[a-z0-9-]{0,61}[a-z0-9])?)$\')\310\001\001'
  _globals['_CLOUDFLAREDNSZONESPEC'].fields_by_name['account_id']._loaded_options = None
  _globals['_CLOUDFLAREDNSZONESPEC'].fields_by_name['account_id']._serialized_options = b'\272H\003\310\001\001'
  _globals['_CLOUDFLAREDNSZONEPLAN']._serialized_start=600
  _globals['_CLOUDFLAREDNSZONEPLAN']._serialized_end=672
  _globals['_CLOUDFLAREDNSZONESPEC']._serialized_start=159
  _globals['_CLOUDFLAREDNSZONESPEC']._serialized_end=598
# @@protoc_insertion_point(module_scope)
