# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: project/planton/provider/gcp/gcpcloudrun/v1/spec.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'project/planton/provider/gcp/gcpcloudrun/v1/spec.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2
from project.planton.shared.options import options_pb2 as project_dot_planton_dot_shared_dot_options_dot_options__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n6project/planton/provider/gcp/gcpcloudrun/v1/spec.proto\x12+project.planton.provider.gcp.gcpcloudrun.v1\x1a\x1b\x62uf/validate/validate.proto\x1a,project/planton/shared/options/options.proto\"\xc4\x03\n\x0fGcpCloudRunSpec\x12G\n\nproject_id\x18\x01 \x01(\tB(\xbaH%r 2\x1e^[a-z][a-z0-9-]{4,28}[a-z0-9]$\xc8\x01\x01R\tprojectId\x12\x36\n\x06region\x18\x02 \x01(\tB\x1e\xbaH\x1br\x16\x32\x14^[a-z]+-[a-z]+[0-9]$\xc8\x01\x01R\x06region\x12g\n\tcontainer\x18\x03 \x01(\x0b\x32\x41.project.planton.provider.gcp.gcpcloudrun.v1.GcpCloudRunContainerB\x06\xbaH\x03\xc8\x01\x01R\tcontainer\x12\x39\n\x0fmax_concurrency\x18\x04 \x01(\x05\x42\x10\xbaH\x07\x1a\x05\x18\xe8\x07(\x01\x92\xa6\x1d\x02\x38\x30R\x0emaxConcurrency\x12=\n\x15\x61llow_unauthenticated\x18\x05 \x01(\x08\x42\x08\x92\xa6\x1d\x04trueR\x14\x61llowUnauthenticated\x12M\n\x03\x64ns\x18\x06 \x01(\x0b\x32;.project.planton.provider.gcp.gcpcloudrun.v1.GcpCloudRunDnsR\x03\x64ns\"\xb3\x03\n\x14GcpCloudRunContainer\x12\\\n\x05image\x18\x01 \x01(\x0b\x32\x46.project.planton.provider.gcp.gcpcloudrun.v1.GcpCloudRunContainerImageR\x05image\x12V\n\x03\x65nv\x18\x02 \x01(\x0b\x32\x44.project.planton.provider.gcp.gcpcloudrun.v1.GcpCloudRunContainerEnvR\x03\x65nv\x12\x1f\n\x04port\x18\x03 \x01(\x05\x42\x0b\xbaH\x08\x1a\x06\x18\xff\xff\x03(\x01R\x04port\x12%\n\x03\x63pu\x18\x04 \x01(\x05\x42\x13\xbaH\x0b\x1a\x06\x30\x01\x30\x02\x30\x04\xc8\x01\x01\x92\xa6\x1d\x01\x31R\x03\x63pu\x12.\n\x06memory\x18\x05 \x01(\x05\x42\x16\xbaH\x0c\x1a\x07\x18\x80\x80\x02(\x80\x01\xc8\x01\x01\x92\xa6\x1d\x03\x35\x31\x32R\x06memory\x12m\n\x08replicas\x18\x06 \x01(\x0b\x32I.project.planton.provider.gcp.gcpcloudrun.v1.GcpCloudRunContainerReplicasB\x06\xbaH\x03\xc8\x01\x01R\x08replicas\"Y\n\x1cGcpCloudRunContainerReplicas\x12\x1e\n\x03min\x18\x01 \x01(\x05\x42\x0c\xbaH\x04\x1a\x02(\x00\x92\xa6\x1d\x01\x30R\x03min\x12\x19\n\x03max\x18\x02 \x01(\x05\x42\x07\xbaH\x04\x1a\x02(\x00R\x03max\"Y\n\x19GcpCloudRunContainerImage\x12\x1e\n\x04repo\x18\x01 \x01(\tB\n\xbaH\x07r\x02\x10\x01\xc8\x01\x01R\x04repo\x12\x1c\n\x03tag\x18\x02 \x01(\tB\n\xbaH\x07r\x02\x10\x01\xc8\x01\x01R\x03tag\"\xf3\x02\n\x17GcpCloudRunContainerEnv\x12q\n\tvariables\x18\x01 \x03(\x0b\x32S.project.planton.provider.gcp.gcpcloudrun.v1.GcpCloudRunContainerEnv.VariablesEntryR\tvariables\x12k\n\x07secrets\x18\x02 \x03(\x0b\x32Q.project.planton.provider.gcp.gcpcloudrun.v1.GcpCloudRunContainerEnv.SecretsEntryR\x07secrets\x1a<\n\x0eVariablesEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\x1a:\n\x0cSecretsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\"\xef\x02\n\x0eGcpCloudRunDns\x12\x18\n\x07\x65nabled\x18\x01 \x01(\x08R\x07\x65nabled\x12p\n\thostnames\x18\x02 \x03(\tBR\xbaHO\x92\x01I\x18\x01\"ErC2A^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\xd8\x01\x01R\thostnames\x12!\n\x0cmanaged_zone\x18\x03 \x01(\tR\x0bmanagedZone:\xad\x01\xbaH\xa9\x01\x1a\xa6\x01\n\x1b\x64ns.enabled-requires-fields\x12?hostnames and managed_zone must be set when dns.enabled is true\x1a\x46!this.enabled || (size(this.hostnames) > 0 && this.managed_zone != \'\')B\x8f\x02\n/com.project.planton.provider.gcp.gcpcloudrun.v1B\tSpecProtoP\x01\xa2\x02\x05PPPGG\xaa\x02+Project.Planton.Provider.Gcp.Gcpcloudrun.V1\xca\x02+Project\\Planton\\Provider\\Gcp\\Gcpcloudrun\\V1\xe2\x02\x37Project\\Planton\\Provider\\Gcp\\Gcpcloudrun\\V1\\GPBMetadata\xea\x02\x30Project::Planton::Provider::Gcp::Gcpcloudrun::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'project.planton.provider.gcp.gcpcloudrun.v1.spec_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n/com.project.planton.provider.gcp.gcpcloudrun.v1B\tSpecProtoP\001\242\002\005PPPGG\252\002+Project.Planton.Provider.Gcp.Gcpcloudrun.V1\312\002+Project\\Planton\\Provider\\Gcp\\Gcpcloudrun\\V1\342\0027Project\\Planton\\Provider\\Gcp\\Gcpcloudrun\\V1\\GPBMetadata\352\0020Project::Planton::Provider::Gcp::Gcpcloudrun::V1'
  _globals['_GCPCLOUDRUNSPEC'].fields_by_name['project_id']._loaded_options = None
  _globals['_GCPCLOUDRUNSPEC'].fields_by_name['project_id']._serialized_options = b'\272H%r 2\036^[a-z][a-z0-9-]{4,28}[a-z0-9]$\310\001\001'
  _globals['_GCPCLOUDRUNSPEC'].fields_by_name['region']._loaded_options = None
  _globals['_GCPCLOUDRUNSPEC'].fields_by_name['region']._serialized_options = b'\272H\033r\0262\024^[a-z]+-[a-z]+[0-9]$\310\001\001'
  _globals['_GCPCLOUDRUNSPEC'].fields_by_name['container']._loaded_options = None
  _globals['_GCPCLOUDRUNSPEC'].fields_by_name['container']._serialized_options = b'\272H\003\310\001\001'
  _globals['_GCPCLOUDRUNSPEC'].fields_by_name['max_concurrency']._loaded_options = None
  _globals['_GCPCLOUDRUNSPEC'].fields_by_name['max_concurrency']._serialized_options = b'\272H\007\032\005\030\350\007(\001\222\246\035\00280'
  _globals['_GCPCLOUDRUNSPEC'].fields_by_name['allow_unauthenticated']._loaded_options = None
  _globals['_GCPCLOUDRUNSPEC'].fields_by_name['allow_unauthenticated']._serialized_options = b'\222\246\035\004true'
  _globals['_GCPCLOUDRUNCONTAINER'].fields_by_name['port']._loaded_options = None
  _globals['_GCPCLOUDRUNCONTAINER'].fields_by_name['port']._serialized_options = b'\272H\010\032\006\030\377\377\003(\001'
  _globals['_GCPCLOUDRUNCONTAINER'].fields_by_name['cpu']._loaded_options = None
  _globals['_GCPCLOUDRUNCONTAINER'].fields_by_name['cpu']._serialized_options = b'\272H\013\032\0060\0010\0020\004\310\001\001\222\246\035\0011'
  _globals['_GCPCLOUDRUNCONTAINER'].fields_by_name['memory']._loaded_options = None
  _globals['_GCPCLOUDRUNCONTAINER'].fields_by_name['memory']._serialized_options = b'\272H\014\032\007\030\200\200\002(\200\001\310\001\001\222\246\035\003512'
  _globals['_GCPCLOUDRUNCONTAINER'].fields_by_name['replicas']._loaded_options = None
  _globals['_GCPCLOUDRUNCONTAINER'].fields_by_name['replicas']._serialized_options = b'\272H\003\310\001\001'
  _globals['_GCPCLOUDRUNCONTAINERREPLICAS'].fields_by_name['min']._loaded_options = None
  _globals['_GCPCLOUDRUNCONTAINERREPLICAS'].fields_by_name['min']._serialized_options = b'\272H\004\032\002(\000\222\246\035\0010'
  _globals['_GCPCLOUDRUNCONTAINERREPLICAS'].fields_by_name['max']._loaded_options = None
  _globals['_GCPCLOUDRUNCONTAINERREPLICAS'].fields_by_name['max']._serialized_options = b'\272H\004\032\002(\000'
  _globals['_GCPCLOUDRUNCONTAINERIMAGE'].fields_by_name['repo']._loaded_options = None
  _globals['_GCPCLOUDRUNCONTAINERIMAGE'].fields_by_name['repo']._serialized_options = b'\272H\007r\002\020\001\310\001\001'
  _globals['_GCPCLOUDRUNCONTAINERIMAGE'].fields_by_name['tag']._loaded_options = None
  _globals['_GCPCLOUDRUNCONTAINERIMAGE'].fields_by_name['tag']._serialized_options = b'\272H\007r\002\020\001\310\001\001'
  _globals['_GCPCLOUDRUNCONTAINERENV_VARIABLESENTRY']._loaded_options = None
  _globals['_GCPCLOUDRUNCONTAINERENV_VARIABLESENTRY']._serialized_options = b'8\001'
  _globals['_GCPCLOUDRUNCONTAINERENV_SECRETSENTRY']._loaded_options = None
  _globals['_GCPCLOUDRUNCONTAINERENV_SECRETSENTRY']._serialized_options = b'8\001'
  _globals['_GCPCLOUDRUNDNS'].fields_by_name['hostnames']._loaded_options = None
  _globals['_GCPCLOUDRUNDNS'].fields_by_name['hostnames']._serialized_options = b'\272HO\222\001I\030\001\"ErC2A^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\330\001\001'
  _globals['_GCPCLOUDRUNDNS']._loaded_options = None
  _globals['_GCPCLOUDRUNDNS']._serialized_options = b'\272H\251\001\032\246\001\n\033dns.enabled-requires-fields\022?hostnames and managed_zone must be set when dns.enabled is true\032F!this.enabled || (size(this.hostnames) > 0 && this.managed_zone != \'\')'
  _globals['_GCPCLOUDRUNSPEC']._serialized_start=179
  _globals['_GCPCLOUDRUNSPEC']._serialized_end=631
  _globals['_GCPCLOUDRUNCONTAINER']._serialized_start=634
  _globals['_GCPCLOUDRUNCONTAINER']._serialized_end=1069
  _globals['_GCPCLOUDRUNCONTAINERREPLICAS']._serialized_start=1071
  _globals['_GCPCLOUDRUNCONTAINERREPLICAS']._serialized_end=1160
  _globals['_GCPCLOUDRUNCONTAINERIMAGE']._serialized_start=1162
  _globals['_GCPCLOUDRUNCONTAINERIMAGE']._serialized_end=1251
  _globals['_GCPCLOUDRUNCONTAINERENV']._serialized_start=1254
  _globals['_GCPCLOUDRUNCONTAINERENV']._serialized_end=1625
  _globals['_GCPCLOUDRUNCONTAINERENV_VARIABLESENTRY']._serialized_start=1505
  _globals['_GCPCLOUDRUNCONTAINERENV_VARIABLESENTRY']._serialized_end=1565
  _globals['_GCPCLOUDRUNCONTAINERENV_SECRETSENTRY']._serialized_start=1567
  _globals['_GCPCLOUDRUNCONTAINERENV_SECRETSENTRY']._serialized_end=1625
  _globals['_GCPCLOUDRUNDNS']._serialized_start=1628
  _globals['_GCPCLOUDRUNDNS']._serialized_end=1995
# @@protoc_insertion_point(module_scope)
