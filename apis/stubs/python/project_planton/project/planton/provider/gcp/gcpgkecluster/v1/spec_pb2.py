# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: project/planton/provider/gcp/gcpgkecluster/v1/spec.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'project/planton/provider/gcp/gcpgkecluster/v1/spec.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2
from project.planton.shared.options import options_pb2 as project_dot_planton_dot_shared_dot_options_dot_options__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n8project/planton/provider/gcp/gcpgkecluster/v1/spec.proto\x12-project.planton.provider.gcp.gcpgkecluster.v1\x1a\x1b\x62uf/validate/validate.proto\x1a,project/planton/shared/options/options.proto\"\xdc\x04\n\x11GcpGkeClusterSpec\x12\x34\n\x12\x63luster_project_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x10\x63lusterProjectId\x12,\n\x06region\x18\x02 \x01(\tB\x0f\x8a\xa6\x1d\x0bus-central1H\x00R\x06region\x88\x01\x01\x12*\n\x04zone\x18\x03 \x01(\tB\x11\x8a\xa6\x1d\rus-central1-aH\x01R\x04zone\x88\x01\x01\x12w\n\x11shared_vpc_config\x18\x04 \x01(\x0b\x32K.project.planton.provider.gcp.gcpgkecluster.v1.GcpGkeClusterSharedVpcConfigR\x0fsharedVpcConfig\x12\x37\n\x18is_workload_logs_enabled\x18\x05 \x01(\x08R\x15isWorkloadLogsEnabled\x12\x8b\x01\n\x1a\x63luster_autoscaling_config\x18\x06 \x01(\x0b\x32M.project.planton.provider.gcp.gcpgkecluster.v1.GcpGkeClusterAutoscalingConfigR\x18\x63lusterAutoscalingConfig\x12\x63\n\nnode_pools\x18\x07 \x03(\x0b\x32\x44.project.planton.provider.gcp.gcpgkecluster.v1.GcpGkeClusterNodePoolR\tnodePoolsB\t\n\x07_regionB\x07\n\x05_zone\"\x8e\x02\n\x1cGcpGkeClusterSharedVpcConfig\x12\x1d\n\nis_enabled\x18\x01 \x01(\x08R\tisEnabled\x12,\n\x0evpc_project_id\x18\x02 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x0cvpcProjectId:\xa0\x01\xbaH\x9c\x01\x1a\x99\x01\n.spec.shared_vpc_config.vpc_project_id.required\x1agthis.is_enabled && size(this.vpc_project_id) == 0? \'VPC Project Id is required to setup shared-vpc\': \'\'\"\xcf\x01\n\x1eGcpGkeClusterAutoscalingConfig\x12\x1d\n\nis_enabled\x18\x01 \x01(\x08R\tisEnabled\x12\"\n\rcpu_min_cores\x18\x02 \x01(\x03R\x0b\x63puMinCores\x12\"\n\rcpu_max_cores\x18\x03 \x01(\x03R\x0b\x63puMaxCores\x12\"\n\rmemory_min_gb\x18\x04 \x01(\x03R\x0bmemoryMinGb\x12\"\n\rmemory_max_gb\x18\x05 \x01(\x03R\x0bmemoryMaxGb\"\x8a\x04\n\x15GcpGkeClusterNodePool\x12\xd1\x02\n\x04name\x18\x01 \x01(\tB\xbc\x02\xbaH\xb8\x02r\x04\x10\x01\x18\x19\xba\x01\x81\x01\n\x18gcp.node_pool.name.chars\x12\x44Only alphanumeric characters (A-Z, a-z, 0-9) and hyphens are allowed\x1a\x1fthis.matches(\'^[A-Za-z0-9-]+$\')\xba\x01W\n\x1dgcp.node_pool.name.startswith\x12\x1cMust not start with a hyphen\x1a\x18this.matches(\'^[^-].*$\')\xba\x01P\n\x1bgcp.node_pool.name.endswith\x12\x1aMust not end with a hyphen\x1a\x15this.matches(\'[^-]$\')R\x04name\x12)\n\x0cmachine_type\x18\x02 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x0bmachineType\x12$\n\x0emin_node_count\x18\x03 \x01(\x05R\x0cminNodeCount\x12$\n\x0emax_node_count\x18\x04 \x01(\x05R\x0cmaxNodeCount\x12&\n\x0fis_spot_enabled\x18\x05 \x01(\x08R\risSpotEnabledB\x99\x02\n1com.project.planton.provider.gcp.gcpgkecluster.v1B\tSpecProtoP\x01\xa2\x02\x05PPPGG\xaa\x02-Project.Planton.Provider.Gcp.Gcpgkecluster.V1\xca\x02-Project\\Planton\\Provider\\Gcp\\Gcpgkecluster\\V1\xe2\x02\x39Project\\Planton\\Provider\\Gcp\\Gcpgkecluster\\V1\\GPBMetadata\xea\x02\x32Project::Planton::Provider::Gcp::Gcpgkecluster::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'project.planton.provider.gcp.gcpgkecluster.v1.spec_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n1com.project.planton.provider.gcp.gcpgkecluster.v1B\tSpecProtoP\001\242\002\005PPPGG\252\002-Project.Planton.Provider.Gcp.Gcpgkecluster.V1\312\002-Project\\Planton\\Provider\\Gcp\\Gcpgkecluster\\V1\342\0029Project\\Planton\\Provider\\Gcp\\Gcpgkecluster\\V1\\GPBMetadata\352\0022Project::Planton::Provider::Gcp::Gcpgkecluster::V1'
  _globals['_GCPGKECLUSTERSPEC'].fields_by_name['cluster_project_id']._loaded_options = None
  _globals['_GCPGKECLUSTERSPEC'].fields_by_name['cluster_project_id']._serialized_options = b'\272H\003\310\001\001'
  _globals['_GCPGKECLUSTERSPEC'].fields_by_name['region']._loaded_options = None
  _globals['_GCPGKECLUSTERSPEC'].fields_by_name['region']._serialized_options = b'\212\246\035\013us-central1'
  _globals['_GCPGKECLUSTERSPEC'].fields_by_name['zone']._loaded_options = None
  _globals['_GCPGKECLUSTERSPEC'].fields_by_name['zone']._serialized_options = b'\212\246\035\rus-central1-a'
  _globals['_GCPGKECLUSTERSHAREDVPCCONFIG'].fields_by_name['vpc_project_id']._loaded_options = None
  _globals['_GCPGKECLUSTERSHAREDVPCCONFIG'].fields_by_name['vpc_project_id']._serialized_options = b'\272H\003\310\001\001'
  _globals['_GCPGKECLUSTERSHAREDVPCCONFIG']._loaded_options = None
  _globals['_GCPGKECLUSTERSHAREDVPCCONFIG']._serialized_options = b'\272H\234\001\032\231\001\n.spec.shared_vpc_config.vpc_project_id.required\032gthis.is_enabled && size(this.vpc_project_id) == 0? \'VPC Project Id is required to setup shared-vpc\': \'\''
  _globals['_GCPGKECLUSTERNODEPOOL'].fields_by_name['name']._loaded_options = None
  _globals['_GCPGKECLUSTERNODEPOOL'].fields_by_name['name']._serialized_options = b'\272H\270\002r\004\020\001\030\031\272\001\201\001\n\030gcp.node_pool.name.chars\022DOnly alphanumeric characters (A-Z, a-z, 0-9) and hyphens are allowed\032\037this.matches(\'^[A-Za-z0-9-]+$\')\272\001W\n\035gcp.node_pool.name.startswith\022\034Must not start with a hyphen\032\030this.matches(\'^[^-].*$\')\272\001P\n\033gcp.node_pool.name.endswith\022\032Must not end with a hyphen\032\025this.matches(\'[^-]$\')'
  _globals['_GCPGKECLUSTERNODEPOOL'].fields_by_name['machine_type']._loaded_options = None
  _globals['_GCPGKECLUSTERNODEPOOL'].fields_by_name['machine_type']._serialized_options = b'\272H\003\310\001\001'
  _globals['_GCPGKECLUSTERSPEC']._serialized_start=183
  _globals['_GCPGKECLUSTERSPEC']._serialized_end=787
  _globals['_GCPGKECLUSTERSHAREDVPCCONFIG']._serialized_start=790
  _globals['_GCPGKECLUSTERSHAREDVPCCONFIG']._serialized_end=1060
  _globals['_GCPGKECLUSTERAUTOSCALINGCONFIG']._serialized_start=1063
  _globals['_GCPGKECLUSTERAUTOSCALINGCONFIG']._serialized_end=1270
  _globals['_GCPGKECLUSTERNODEPOOL']._serialized_start=1273
  _globals['_GCPGKECLUSTERNODEPOOL']._serialized_end=1795
# @@protoc_insertion_point(module_scope)
