# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: project/planton/provider/aws/awsvpc/v1/spec.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'project/planton/provider/aws/awsvpc/v1/spec.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2
from project.planton.shared.options import options_pb2 as project_dot_planton_dot_shared_dot_options_dot_options__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n1project/planton/provider/aws/awsvpc/v1/spec.proto\x12&project.planton.provider.aws.awsvpc.v1\x1a\x1b\x62uf/validate/validate.proto\x1a,project/planton/shared/options/options.proto\"\xff\x02\n\nAwsVpcSpec\x12!\n\x08vpc_cidr\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x07vpcCidr\x12-\n\x12\x61vailability_zones\x18\x02 \x03(\tR\x11\x61vailabilityZones\x12N\n\x1dsubnets_per_availability_zone\x18\x03 \x01(\x05\x42\x0b\xbaH\x03\xc8\x01\x01\x92\xa6\x1d\x01\x31R\x1asubnetsPerAvailabilityZone\x12,\n\x0bsubnet_size\x18\x04 \x01(\x05\x42\x0b\xbaH\x03\xc8\x01\x01\x92\xa6\x1d\x01\x31R\nsubnetSize\x12\x33\n\x16is_nat_gateway_enabled\x18\x05 \x01(\x08R\x13isNatGatewayEnabled\x12\x37\n\x18is_dns_hostnames_enabled\x18\x06 \x01(\x08R\x15isDnsHostnamesEnabled\x12\x33\n\x16is_dns_support_enabled\x18\x07 \x01(\x08R\x13isDnsSupportEnabledB\xf6\x01\n*com.project.planton.provider.aws.awsvpc.v1B\tSpecProtoP\x01\xa2\x02\x05PPPAA\xaa\x02&Project.Planton.Provider.Aws.Awsvpc.V1\xca\x02&Project\\Planton\\Provider\\Aws\\Awsvpc\\V1\xe2\x02\x32Project\\Planton\\Provider\\Aws\\Awsvpc\\V1\\GPBMetadata\xea\x02+Project::Planton::Provider::Aws::Awsvpc::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'project.planton.provider.aws.awsvpc.v1.spec_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n*com.project.planton.provider.aws.awsvpc.v1B\tSpecProtoP\001\242\002\005PPPAA\252\002&Project.Planton.Provider.Aws.Awsvpc.V1\312\002&Project\\Planton\\Provider\\Aws\\Awsvpc\\V1\342\0022Project\\Planton\\Provider\\Aws\\Awsvpc\\V1\\GPBMetadata\352\002+Project::Planton::Provider::Aws::Awsvpc::V1'
  _globals['_AWSVPCSPEC'].fields_by_name['vpc_cidr']._loaded_options = None
  _globals['_AWSVPCSPEC'].fields_by_name['vpc_cidr']._serialized_options = b'\272H\003\310\001\001'
  _globals['_AWSVPCSPEC'].fields_by_name['subnets_per_availability_zone']._loaded_options = None
  _globals['_AWSVPCSPEC'].fields_by_name['subnets_per_availability_zone']._serialized_options = b'\272H\003\310\001\001\222\246\035\0011'
  _globals['_AWSVPCSPEC'].fields_by_name['subnet_size']._loaded_options = None
  _globals['_AWSVPCSPEC'].fields_by_name['subnet_size']._serialized_options = b'\272H\003\310\001\001\222\246\035\0011'
  _globals['_AWSVPCSPEC']._serialized_start=169
  _globals['_AWSVPCSPEC']._serialized_end=552
# @@protoc_insertion_point(module_scope)
