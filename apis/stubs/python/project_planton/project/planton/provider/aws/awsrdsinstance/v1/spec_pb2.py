# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: project/planton/provider/aws/awsrdsinstance/v1/spec.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'project/planton/provider/aws/awsrdsinstance/v1/spec.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2
from project.planton.shared.foreignkey.v1 import foreign_key_pb2 as project_dot_planton_dot_shared_dot_foreignkey_dot_v1_dot_foreign__key__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n9project/planton/provider/aws/awsrdsinstance/v1/spec.proto\x12.project.planton.provider.aws.awsrdsinstance.v1\x1a\x1b\x62uf/validate/validate.proto\x1a\x36project/planton/shared/foreignkey/v1/foreign_key.proto\"\xa9\t\n\x12\x41wsRdsInstanceSpec\x12\x85\x01\n\nsubnet_ids\x18\x01 \x03(\x0b\x32\x36.project.planton.shared.foreignkey.v1.StringValueOrRefB.\x88\xd4\x61\xd9\x01\x92\xd4\x61%status.outputs.private_subnets.[*].idR\tsubnetIds\x12g\n\x14\x64\x62_subnet_group_name\x18\x02 \x01(\x0b\x32\x36.project.planton.shared.foreignkey.v1.StringValueOrRefR\x11\x64\x62SubnetGroupName\x12\x8f\x01\n\x12security_group_ids\x18\x03 \x03(\x0b\x32\x36.project.planton.shared.foreignkey.v1.StringValueOrRefB)\x88\xd4\x61\xd7\x01\x92\xd4\x61 status.outputs.security_group_idR\x10securityGroupIds\x12\x1f\n\x06\x65ngine\x18\x04 \x01(\tB\x07\xbaH\x04r\x02\x10\x01R\x06\x65ngine\x12.\n\x0e\x65ngine_version\x18\x05 \x01(\tB\x07\xbaH\x04r\x02\x10\x01R\rengineVersion\x12\x35\n\x0einstance_class\x18\x06 \x01(\tB\x0e\xbaH\x0br\t\x10\x01\x32\x05^db\\.R\rinstanceClass\x12\x39\n\x14\x61llocated_storage_gb\x18\x07 \x01(\x05\x42\x07\xbaH\x04\x1a\x02 \x00R\x12\x61llocatedStorageGb\x12+\n\x11storage_encrypted\x18\x08 \x01(\x08R\x10storageEncrypted\x12u\n\nkms_key_id\x18\t \x01(\x0b\x32\x36.project.planton.shared.foreignkey.v1.StringValueOrRefB\x1f\x88\xd4\x61\xdc\x01\x92\xd4\x61\x16status.outputs.key_arnR\x08kmsKeyId\x12#\n\x08username\x18\n \x01(\tB\x07\xbaH\x04r\x02\x10\x01R\x08username\x12#\n\x08password\x18\x0b \x01(\tB\x07\xbaH\x04r\x02\x10\x01R\x08password\x12\x1f\n\x04port\x18\x0c \x01(\x05\x42\x0b\xbaH\x08\x1a\x06\x18\xff\xff\x03(\x00R\x04port\x12/\n\x13publicly_accessible\x18\r \x01(\x08R\x12publiclyAccessible\x12\x19\n\x08multi_az\x18\x0e \x01(\x08R\x07multiAz\x12\x30\n\x14parameter_group_name\x18\x0f \x01(\tR\x12parameterGroupName\x12*\n\x11option_group_name\x18\x10 \x01(\tR\x0foptionGroupName:\x93\x01\xbaH\x8f\x01\x1a\x8c\x01\n\x10subnets_or_group\x12\x37Provide either subnet_ids (>=2) or db_subnet_group_name\x1a?(this.subnet_ids.size() >= 2) || has(this.db_subnet_group_name)B\x9e\x02\n2com.project.planton.provider.aws.awsrdsinstance.v1B\tSpecProtoP\x01\xa2\x02\x05PPPAA\xaa\x02.Project.Planton.Provider.Aws.Awsrdsinstance.V1\xca\x02.Project\\Planton\\Provider\\Aws\\Awsrdsinstance\\V1\xe2\x02:Project\\Planton\\Provider\\Aws\\Awsrdsinstance\\V1\\GPBMetadata\xea\x02\x33Project::Planton::Provider::Aws::Awsrdsinstance::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'project.planton.provider.aws.awsrdsinstance.v1.spec_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n2com.project.planton.provider.aws.awsrdsinstance.v1B\tSpecProtoP\001\242\002\005PPPAA\252\002.Project.Planton.Provider.Aws.Awsrdsinstance.V1\312\002.Project\\Planton\\Provider\\Aws\\Awsrdsinstance\\V1\342\002:Project\\Planton\\Provider\\Aws\\Awsrdsinstance\\V1\\GPBMetadata\352\0023Project::Planton::Provider::Aws::Awsrdsinstance::V1'
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['subnet_ids']._loaded_options = None
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['subnet_ids']._serialized_options = b'\210\324a\331\001\222\324a%status.outputs.private_subnets.[*].id'
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['security_group_ids']._loaded_options = None
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['security_group_ids']._serialized_options = b'\210\324a\327\001\222\324a status.outputs.security_group_id'
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['engine']._loaded_options = None
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['engine']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['engine_version']._loaded_options = None
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['engine_version']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['instance_class']._loaded_options = None
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['instance_class']._serialized_options = b'\272H\013r\t\020\0012\005^db\\.'
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['allocated_storage_gb']._loaded_options = None
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['allocated_storage_gb']._serialized_options = b'\272H\004\032\002 \000'
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['kms_key_id']._loaded_options = None
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['kms_key_id']._serialized_options = b'\210\324a\334\001\222\324a\026status.outputs.key_arn'
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['username']._loaded_options = None
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['username']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['password']._loaded_options = None
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['password']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['port']._loaded_options = None
  _globals['_AWSRDSINSTANCESPEC'].fields_by_name['port']._serialized_options = b'\272H\010\032\006\030\377\377\003(\000'
  _globals['_AWSRDSINSTANCESPEC']._loaded_options = None
  _globals['_AWSRDSINSTANCESPEC']._serialized_options = b'\272H\217\001\032\214\001\n\020subnets_or_group\0227Provide either subnet_ids (>=2) or db_subnet_group_name\032?(this.subnet_ids.size() >= 2) || has(this.db_subnet_group_name)'
  _globals['_AWSRDSINSTANCESPEC']._serialized_start=195
  _globals['_AWSRDSINSTANCESPEC']._serialized_end=1388
# @@protoc_insertion_point(module_scope)
